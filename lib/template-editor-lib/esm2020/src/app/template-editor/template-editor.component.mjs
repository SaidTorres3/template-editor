import { Component, EventEmitter, Input, Output, ViewChild, } from "@angular/core";
import { docxToEditableObjects } from "../../utils/docxParsers/docxToEditableObjects";
import { transformEditablePhrasesToViewablePhrases } from "../../utils/phrasesParsers/transformEditablePhrasesToViewablePhrases";
import { ViewMode, } from "../interfaces";
import { Zoom } from "../shared/zoom-class/Zoom";
import { FormControl, FormGroup, Validators } from "@angular/forms";
import * as i0 from "@angular/core";
import * as i1 from "../components/header/header.component";
import * as i2 from "../components/workspace/workspace.component";
import * as i3 from "../components/footer/footer.component";
import * as i4 from "@angular/forms";
export class AppComponent {
    constructor() {
        this.title = "template-editor";
        this.save = new EventEmitter();
        this.updatedTemplateInformation = new EventEmitter();
        this.editablePhrases = [];
        this.viewablePhrases = [];
        this.history = [];
        this.zoom = new Zoom();
        this.workspace = {
            dropingFile: false,
            fileDropDown: false,
            detailsModal: false,
            paperZoom: { value: 1 },
            dataZoom: { value: 1 },
            mode: ViewMode.edit,
            historyIndex: 0,
            lastModifiedEditablePhraseIndex: 0,
            lastSelection: { start: 0, end: 0 },
            needToFocus: false,
        };
        this.docxFile = {
            content: "",
            name: "",
            lastModifiedDate: 0,
        };
        this.templateInformationForm = new FormGroup({
            name: new FormControl(undefined, [Validators.required]),
            description: new FormControl(undefined, [Validators.required]),
        });
        this.fileBackdropHandlerListener = () => {
            const initCount = -1;
            let count = initCount;
            window.ondragover = (e) => {
                e.preventDefault();
            };
            const docxFileType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
            window.ondragenter = (e) => {
                // if event contains a file with .docx extension
                if (e.dataTransfer.items[0].kind === "file" &&
                    e.dataTransfer.items[0].type === docxFileType) {
                    this.workspace.dropingFile = true;
                    count++;
                }
            };
            window.ondragleave = () => {
                count--;
                if (count < 0) {
                    this.workspace.dropingFile = false;
                    count = initCount;
                }
            };
            window.ondrop = (e) => {
                e.preventDefault();
                count = initCount;
                this.workspace.dropingFile = false;
                if (e.dataTransfer.items[0].kind === "file" &&
                    e.dataTransfer.items[0].type === docxFileType) {
                    this.setTemplateFromFile(e.dataTransfer.files[0]);
                }
            };
        };
        this.undo = () => {
            if (this.workspace.historyIndex > 0) {
                const editablePhrasesFromLastestElementInHistory = this.history[this.workspace.historyIndex].editablePhrases.map((a) => ({ ...a }));
                this.workspace.historyIndex--;
                this.workspace = {
                    ...this.workspace,
                    lastModifiedEditablePhraseIndex: this.history[this.workspace.historyIndex].lastModifiedEditablePhraseIndex,
                    lastSelection: this.history[this.workspace.historyIndex].selection,
                };
                editablePhrasesFromLastestElementInHistory.map((editablePhrase, index) => {
                    const editablePhraseFromHistory = this.history[this.workspace.historyIndex].editablePhrases[index];
                    if (editablePhrase.value !== editablePhraseFromHistory.value) {
                        this.editablePhrases[index] = {
                            ...this.history[this.workspace.historyIndex].editablePhrases[index],
                        };
                    }
                });
                this.updateViewablePhrasesValue();
            }
        };
        this.redo = () => {
            if (this.workspace.historyIndex + 1 <= this.history.length - 1) {
                const editablePhrasesFromLastestElementInHistory = this.history[this.workspace.historyIndex].editablePhrases.map((a) => ({
                    ...a,
                }));
                this.workspace.historyIndex++;
                this.workspace = {
                    ...this.workspace,
                    lastModifiedEditablePhraseIndex: this.history[this.workspace.historyIndex].lastModifiedEditablePhraseIndex,
                    lastSelection: this.history[this.workspace.historyIndex].selection,
                };
                editablePhrasesFromLastestElementInHistory.map((editablePhrase, index) => {
                    const editablePhraseFromHistory = this.history[this.workspace.historyIndex].editablePhrases[index];
                    if (editablePhrase.value !== editablePhraseFromHistory.value) {
                        this.editablePhrases[index] = { ...editablePhraseFromHistory };
                    }
                });
                this.updateViewablePhrasesValue();
            }
        };
    }
    saveHandler(docxFile) {
        this.save.emit(docxFile);
    }
    ngOnInit() {
        if (this.template) {
            this.setTemplateFromFile(this.template);
        }
        if (this.templateInformation) {
            this.templateInformationForm.setValue({
                name: this.templateInformation.name,
                description: this.templateInformation.description,
            });
        }
    }
    ngAfterViewInit() {
        this.fileBackdropHandlerListener();
        this.historyHandlerListener();
        this.changeModeWithHotkeysListener();
    }
    setTemplateFromInputEvent(inputEvent) {
        const inputFile = inputEvent.target;
        this.setTemplateFromFile(inputFile.files[0]);
    }
    setTemplateFromFile(inputFile) {
        const reader = new FileReader();
        reader.onloadend = (e) => {
            const data = e.target.result;
            this.docxFile = {
                // template storage
                ...this.docxFile,
                name: inputFile.name,
                lastModifiedDate: inputFile.lastModified,
                content: data,
            };
            docxToEditableObjects(inputFile).then((editableObjects) => {
                this.setPhrases(editableObjects);
            });
        };
        reader.readAsArrayBuffer(inputFile);
    }
    setPhrases(editableObjects) {
        this.editablePhrases = editableObjects.map((a) => ({ ...a }));
        this.history = [
            {
                editablePhrases: editableObjects.map((a) => ({ ...a })),
                lastModifiedEditablePhraseIndex: 0,
                selection: undefined,
            },
        ];
        this.workspace.historyIndex = 0;
        this.updatesPhrasesValues();
    }
    updateEditablePhrase(inputEvent, editablePhraseIndex) {
        const doesHistoryIndexIsPosibleInHistory = this.workspace.historyIndex < this.history.length - 1;
        if (doesHistoryIndexIsPosibleInHistory) {
            const historyCuttedAfterCurrentIndex = this.history.slice(0, this.workspace.historyIndex + 1);
            this.history = historyCuttedAfterCurrentIndex;
        }
        const selection = window.getSelection();
        const selectionRange = {
            start: selection.anchorOffset,
            end: selection.focusOffset,
        };
        const phraseElement = inputEvent.target;
        const modifiedPhrasesFromHistory = this.history[this.history.length - 1].editablePhrases.map((a) => ({ ...a }));
        modifiedPhrasesFromHistory[editablePhraseIndex].value =
            phraseElement.innerText;
        this.history.push({
            editablePhrases: [...modifiedPhrasesFromHistory].map((a) => ({ ...a })),
            lastModifiedEditablePhraseIndex: editablePhraseIndex,
            selection: selectionRange,
        });
        this.workspace = {
            ...this.workspace,
            lastModifiedEditablePhraseIndex: editablePhraseIndex,
            lastSelection: selectionRange,
            historyIndex: this.history.length - 1,
        };
        this.updateViewablePhrasesValue();
    }
    setMode(mode) {
        if (mode === ViewMode.edit) {
            this.workspace.mode = ViewMode.edit;
            this.updatesPhrasesValues();
        }
        else if (mode === ViewMode.view) {
            this.workspace.mode = ViewMode.view;
            this.updatesPhrasesValues();
        }
        else if (mode === ViewMode.simulation) {
            this.workspace.mode = ViewMode.simulation;
        }
        else if (mode === ViewMode.editView) {
            this.workspace.mode = ViewMode.editView;
            if (this.workspace.paperZoom.value >= 1) {
                this.workspace.paperZoom.value = 0.9;
            }
        }
    }
    hideModals() {
        this.workspace.detailsModal = false;
    }
    updateTemplateInformation() {
        if (this.templateInformationForm.valid) {
            this.templateInformation = {
                name: this.templateInformationForm.value.name,
                description: this.templateInformationForm.value.description,
            };
            this.updatedTemplateInformation.emit(this.templateInformation);
            this.hideModals();
        }
    }
    updatesPhrasesValues() {
        this.updateEditablePhrasesValue();
        this.updateViewablePhrasesValue();
    }
    updateEditablePhrasesValue() {
        this.workspace.lastModifiedEditablePhraseIndex = this.history[this.workspace.historyIndex].lastModifiedEditablePhraseIndex;
        this.editablePhrases = this.history[this.workspace.historyIndex].editablePhrases.map((a) => ({
            ...a,
        }));
        this.workspace.needToFocus = true;
        this.workspace.needToFocus = false;
    }
    updateViewablePhrasesValue() {
        const updatedViewablePhrases = transformEditablePhrasesToViewablePhrases(this.history[this.workspace.historyIndex].editablePhrases);
        if (this.viewablePhrases.length === updatedViewablePhrases.length) {
            updatedViewablePhrases.forEach((updatedViewablePhrase, index) => {
                if (this.viewablePhrases[index].value !== updatedViewablePhrase.value) {
                    this.viewablePhrases[index].value = updatedViewablePhrase.value;
                }
            });
        }
        else {
            this.viewablePhrases = transformEditablePhrasesToViewablePhrases(this.history[this.workspace.historyIndex].editablePhrases);
        }
    }
    changeModeWithHotkeysListener() {
        document.addEventListener("keydown", (e) => {
            // detect when shift + v or shift + V and detect when stop pressing
            if ((e.key === "z" || e.key === "Z") && e.shiftKey && e.altKey) {
                e.preventDefault();
                if (this.workspace.mode !== ViewMode.edit) {
                    this.setMode("edit");
                }
            }
            else if ((e.key === "x" || e.key === "X") && e.shiftKey && e.altKey) {
                e.preventDefault();
                if (this.workspace.mode !== ViewMode.view) {
                    this.setMode("view");
                }
            }
            else if ((e.key === "c" || e.key === "C") && e.shiftKey && e.altKey) {
                e.preventDefault();
                if (this.workspace.mode !== ViewMode.simulation) {
                    this.setMode("simulation");
                }
            }
        });
    }
    historyHandlerListener() {
        // add event listener to ctrl + z and ctrl + y
        document.addEventListener("keydown", (e) => {
            if (e.ctrlKey) {
                if (e.key === "z") {
                    e.preventDefault();
                    this.undo();
                }
                else if (e.key === "y") {
                    e.preventDefault();
                    this.redo();
                }
            }
        });
    }
}
AppComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: AppComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AppComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: AppComponent, selector: "template-editor", inputs: { data: "data", template: "template", templateInformation: "templateInformation" }, outputs: { save: "save", updatedTemplateInformation: "updatedTemplateInformation" }, viewQueries: [{ propertyName: "uploadFileInput", first: true, predicate: ["uploadFileInput"], descendants: true }, { propertyName: "workspaceContainer", first: true, predicate: ["workspaceContainer"], descendants: true }], ngImport: i0, template: "<body>\r\n  <input\r\n    #uploadFileInput\r\n    (change)=\"setTemplateFromInputEvent($event)\"\r\n    class=\"invisible\"\r\n    type=\"file\"\r\n    id=\"template\"\r\n    name=\"template\"\r\n    accept=\".docx\"\r\n    />\r\n\r\n  <div\r\n    class=\"backdrop\"\r\n    [class.backdrop--hover]=\"workspace.dropingFile\"\r\n    (wheel)=\"$event.preventDefault()\"\r\n  >\r\n    <div class=\"backdrop__drop-file-msg\">\r\n      Abrir template\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    class=\"backdrop-modal\"\r\n    [class.backdrop-modal--hover]=\"workspace.detailsModal\"\r\n    (click)=\"hideModals()\"\r\n  >\r\n    <form\r\n      class=\"backdrop-modal__details-modal\"\r\n      (click)=\"$event.stopPropagation()\"\r\n      [formGroup]=\"templateInformationForm\"\r\n      (submit)=\"updateTemplateInformation()\"\r\n    >\r\n      <p>Nombre del template:</p>\r\n      <input\r\n        class=\"backdrop-modal__details-modal__input\"\r\n        [value]=\"templateInformation?.name || ''\"\r\n        formControlName=\"name\"\r\n        nz-input\r\n        type=\"text\"\r\n      >\r\n      <p>Descripci\u00F3n:</p>\r\n      <textarea\r\n        class=\"backdrop-modal__details-modal__input backdrop-modal__details-modal__input--textarea\"\r\n        formControlName=\"description\"\r\n        nz-input\r\n      >{{templateInformation?.description}}</textarea>\r\n      <div class=\"backdrop-modal__details-modal__buttons-container\">\r\n        <button\r\n          class=\"backdrop-modal__details-modal__buttons-container__btn backdrop-modal__details-modal__buttons-container__btn--save\"\r\n          type=\"submit\"\r\n        >Guardar</button>\r\n        <button\r\n          class=\"backdrop-modal__details-modal__buttons-container__btn backdrop-modal__details-modal__buttons-container__btn--cancel\"\r\n          (click)=\"hideModals()\"\r\n          type=\"button\"\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <app-header\r\n    [workspace]=\"workspace\"\r\n    [docxFile]=\"docxFile\"\r\n    [history]=\"history\"\r\n    [editablePhrases]=\"editablePhrases\"\r\n    [uploadFileInput]=\"uploadFileInput\"\r\n    (fileChange)=\"setTemplateFromInputEvent($event)\"\r\n    (docxFileChanged)=\"saveHandler($event)\"\r\n  ></app-header>\r\n\r\n  <app-workspace\r\n    [data]=\"data\"\r\n    [workspace]=\"workspace\"\r\n    [editablePhrases]=\"editablePhrases\"\r\n    [fileInput]=\"uploadFileInput\"\r\n    [viewablePhrases]=\"viewablePhrases\"\r\n    #workspaceContainer\r\n    style=\"flex-grow: 1; height: 100%; overflow: auto;\"\r\n    (editablePhraseChanged)=\"updateEditablePhrase($event.inputEvent, $event.indexOfEditablePhrase)\"\r\n  ></app-workspace>\r\n\r\n  <app-footer\r\n    [workspace]=\"workspace\"\r\n    (clickEditMode)=\"!$event.shiftKey ? setMode('edit') : setMode('editView')\"\r\n    (clickViewMode)=\"!$event.shiftKey ? setMode('view') : setMode('editView')\"\r\n    (clickSimulationMode)=\"setMode('simulation')\"\r\n  ></app-footer>\r\n</body>", styles: ["@font-face{font-family:Readex Pro;font-style:normal;font-weight:200;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQzfm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQwBm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQxfm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQxtm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQyBnLw3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:700;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQy4nLw3.ttf) format(\"truetype\")}body{margin:0;position:relative;display:flex;flex-direction:column;font-family:Readex Pro,sans-serif;background-color:#f4f6f7;font-weight:300;box-sizing:border-box;height:100%;width:100%;--elements-color: #fff;--legalSizeSheet-width: 816px;--legalSizeSheet-height: 1344px;--header-height: 50px;--footer-height: 20px;--data-searchbar-height: 20px}.backdrop{display:flex;background:radial-gradient(circle,#000D 0%,#0009 70%,#0005 100%);position:absolute;top:0px;width:100%;height:100%;z-index:110000;justify-content:center;align-items:center;transition-duration:.3s;transition-property:opacity,visibility;opacity:0;visibility:hidden}.backdrop--hover{visibility:initial;opacity:1}.backdrop__drop-file-msg{font-size:5vw;color:#fff;font-weight:300;border-style:dashed;border-radius:.8vw;border-color:#fff;border-width:1vw;padding:1.5vw}.backdrop-modal{display:flex;background-color:#0009;position:absolute;top:0px;width:100%;height:100%;z-index:110000;justify-content:center;align-items:center;transition-duration:.3s;transition-property:opacity,visibility;opacity:0;visibility:hidden}.backdrop-modal--hover{visibility:initial;opacity:1}.backdrop-modal__details-modal{background-color:#fff;display:flex;flex-direction:column;justify-content:center;align-items:center;padding:4vw 3vw;font-size:2vw;border-radius:20px}.backdrop-modal__details-modal>*{margin:0;font-family:sans-serif;margin-bottom:1vw}.backdrop-modal__details-modal>*:last-child{margin-bottom:0}.backdrop-modal__details-modal__input{width:35vw;height:5vh;max-height:40px;font-size:1.5vw}.backdrop-modal__details-modal__input--textarea{max-height:150px;height:10vw;resize:none;font-size:1.3vw}.backdrop-modal__details-modal__buttons-container{display:flex;flex-direction:row}.backdrop-modal__details-modal__buttons-container__btn{width:10vw;height:4vw;font-size:1.5vw;border-radius:20px;border-style:solid;border-width:2px;cursor:pointer;transition-duration:.2s;margin-right:1vw}.backdrop-modal__details-modal__buttons-container__btn:last-child{margin-right:0}.backdrop-modal__details-modal__buttons-container__btn--save{border-color:#fff;background-color:#fff;border-color:#00a8ff}.backdrop-modal__details-modal__buttons-container__btn--save:hover{background-color:#00b9ff;border-color:#002fff}.backdrop-modal__details-modal__buttons-container__btn--cancel{border-color:#fff;background-color:#fff;border-color:red}.backdrop-modal__details-modal__buttons-container__btn--cancel:hover{background-color:red;border-color:red}\n", "*{box-sizing:border-box!important}.invisible{visibility:hidden;display:none}::-webkit-scrollbar{width:8px;height:8px}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#8888}::-webkit-scrollbar-thumb:hover{background:#555}\n"], components: [{ type: i1.HeaderComponent, selector: "app-header[history][docxFile][uploadFileInput][editablePhrases]", inputs: ["workspace", "docxFile", "history", "uploadFileInput", "editablePhrases"], outputs: ["fileChange", "docxFileChanged"] }, { type: i2.WorkspaceComponent, selector: "app-workspace[data][workspace][editablePhrases][fileInput][viewablePhrases]", inputs: ["data", "workspace", "editablePhrases", "fileInput", "viewablePhrases"], outputs: ["editablePhraseChanged"] }, { type: i3.FooterComponent, selector: "app-footer[workspace]", inputs: ["workspace"], outputs: ["clickEditMode", "clickViewMode", "clickSimulationMode"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: AppComponent, decorators: [{
            type: Component,
            args: [{ selector: "template-editor", template: "<body>\r\n  <input\r\n    #uploadFileInput\r\n    (change)=\"setTemplateFromInputEvent($event)\"\r\n    class=\"invisible\"\r\n    type=\"file\"\r\n    id=\"template\"\r\n    name=\"template\"\r\n    accept=\".docx\"\r\n    />\r\n\r\n  <div\r\n    class=\"backdrop\"\r\n    [class.backdrop--hover]=\"workspace.dropingFile\"\r\n    (wheel)=\"$event.preventDefault()\"\r\n  >\r\n    <div class=\"backdrop__drop-file-msg\">\r\n      Abrir template\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    class=\"backdrop-modal\"\r\n    [class.backdrop-modal--hover]=\"workspace.detailsModal\"\r\n    (click)=\"hideModals()\"\r\n  >\r\n    <form\r\n      class=\"backdrop-modal__details-modal\"\r\n      (click)=\"$event.stopPropagation()\"\r\n      [formGroup]=\"templateInformationForm\"\r\n      (submit)=\"updateTemplateInformation()\"\r\n    >\r\n      <p>Nombre del template:</p>\r\n      <input\r\n        class=\"backdrop-modal__details-modal__input\"\r\n        [value]=\"templateInformation?.name || ''\"\r\n        formControlName=\"name\"\r\n        nz-input\r\n        type=\"text\"\r\n      >\r\n      <p>Descripci\u00F3n:</p>\r\n      <textarea\r\n        class=\"backdrop-modal__details-modal__input backdrop-modal__details-modal__input--textarea\"\r\n        formControlName=\"description\"\r\n        nz-input\r\n      >{{templateInformation?.description}}</textarea>\r\n      <div class=\"backdrop-modal__details-modal__buttons-container\">\r\n        <button\r\n          class=\"backdrop-modal__details-modal__buttons-container__btn backdrop-modal__details-modal__buttons-container__btn--save\"\r\n          type=\"submit\"\r\n        >Guardar</button>\r\n        <button\r\n          class=\"backdrop-modal__details-modal__buttons-container__btn backdrop-modal__details-modal__buttons-container__btn--cancel\"\r\n          (click)=\"hideModals()\"\r\n          type=\"button\"\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <app-header\r\n    [workspace]=\"workspace\"\r\n    [docxFile]=\"docxFile\"\r\n    [history]=\"history\"\r\n    [editablePhrases]=\"editablePhrases\"\r\n    [uploadFileInput]=\"uploadFileInput\"\r\n    (fileChange)=\"setTemplateFromInputEvent($event)\"\r\n    (docxFileChanged)=\"saveHandler($event)\"\r\n  ></app-header>\r\n\r\n  <app-workspace\r\n    [data]=\"data\"\r\n    [workspace]=\"workspace\"\r\n    [editablePhrases]=\"editablePhrases\"\r\n    [fileInput]=\"uploadFileInput\"\r\n    [viewablePhrases]=\"viewablePhrases\"\r\n    #workspaceContainer\r\n    style=\"flex-grow: 1; height: 100%; overflow: auto;\"\r\n    (editablePhraseChanged)=\"updateEditablePhrase($event.inputEvent, $event.indexOfEditablePhrase)\"\r\n  ></app-workspace>\r\n\r\n  <app-footer\r\n    [workspace]=\"workspace\"\r\n    (clickEditMode)=\"!$event.shiftKey ? setMode('edit') : setMode('editView')\"\r\n    (clickViewMode)=\"!$event.shiftKey ? setMode('view') : setMode('editView')\"\r\n    (clickSimulationMode)=\"setMode('simulation')\"\r\n  ></app-footer>\r\n</body>", styles: ["@font-face{font-family:Readex Pro;font-style:normal;font-weight:200;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQzfm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQwBm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQxfm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQxtm7w3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQyBnLw3.ttf) format(\"truetype\")}@font-face{font-family:Readex Pro;font-style:normal;font-weight:700;font-display:swap;src:url(https://fonts.gstatic.com/s/readexpro/v9/SLXYc1bJ7HE5YDoGPuzj_dh8na74KiwZQQy4nLw3.ttf) format(\"truetype\")}body{margin:0;position:relative;display:flex;flex-direction:column;font-family:Readex Pro,sans-serif;background-color:#f4f6f7;font-weight:300;box-sizing:border-box;height:100%;width:100%;--elements-color: #fff;--legalSizeSheet-width: 816px;--legalSizeSheet-height: 1344px;--header-height: 50px;--footer-height: 20px;--data-searchbar-height: 20px}.backdrop{display:flex;background:radial-gradient(circle,#000D 0%,#0009 70%,#0005 100%);position:absolute;top:0px;width:100%;height:100%;z-index:110000;justify-content:center;align-items:center;transition-duration:.3s;transition-property:opacity,visibility;opacity:0;visibility:hidden}.backdrop--hover{visibility:initial;opacity:1}.backdrop__drop-file-msg{font-size:5vw;color:#fff;font-weight:300;border-style:dashed;border-radius:.8vw;border-color:#fff;border-width:1vw;padding:1.5vw}.backdrop-modal{display:flex;background-color:#0009;position:absolute;top:0px;width:100%;height:100%;z-index:110000;justify-content:center;align-items:center;transition-duration:.3s;transition-property:opacity,visibility;opacity:0;visibility:hidden}.backdrop-modal--hover{visibility:initial;opacity:1}.backdrop-modal__details-modal{background-color:#fff;display:flex;flex-direction:column;justify-content:center;align-items:center;padding:4vw 3vw;font-size:2vw;border-radius:20px}.backdrop-modal__details-modal>*{margin:0;font-family:sans-serif;margin-bottom:1vw}.backdrop-modal__details-modal>*:last-child{margin-bottom:0}.backdrop-modal__details-modal__input{width:35vw;height:5vh;max-height:40px;font-size:1.5vw}.backdrop-modal__details-modal__input--textarea{max-height:150px;height:10vw;resize:none;font-size:1.3vw}.backdrop-modal__details-modal__buttons-container{display:flex;flex-direction:row}.backdrop-modal__details-modal__buttons-container__btn{width:10vw;height:4vw;font-size:1.5vw;border-radius:20px;border-style:solid;border-width:2px;cursor:pointer;transition-duration:.2s;margin-right:1vw}.backdrop-modal__details-modal__buttons-container__btn:last-child{margin-right:0}.backdrop-modal__details-modal__buttons-container__btn--save{border-color:#fff;background-color:#fff;border-color:#00a8ff}.backdrop-modal__details-modal__buttons-container__btn--save:hover{background-color:#00b9ff;border-color:#002fff}.backdrop-modal__details-modal__buttons-container__btn--cancel{border-color:#fff;background-color:#fff;border-color:red}.backdrop-modal__details-modal__buttons-container__btn--cancel:hover{background-color:red;border-color:red}\n", "*{box-sizing:border-box!important}.invisible{visibility:hidden;display:none}::-webkit-scrollbar{width:8px;height:8px}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#8888}::-webkit-scrollbar-thumb:hover{background:#555}\n"] }]
        }], propDecorators: { uploadFileInput: [{
                type: ViewChild,
                args: ["uploadFileInput"]
            }], workspaceContainer: [{
                type: ViewChild,
                args: ["workspaceContainer"]
            }], data: [{
                type: Input
            }], template: [{
                type: Input
            }], templateInformation: [{
                type: Input
            }], save: [{
                type: Output
            }], updatedTemplateInformation: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,