{"version":3,"file":"saidtorres3-template-editor.mjs","sources":["../../../src/utils/docxParsers/docxToEditableObjects.ts","../../../src/utils/docxParsers/types.ts","../../../src/utils/phrasesParsers/transformEditablePhrasesToString.ts","../../../src/utils/phrasesParsers/transformStringToViewablePhrases.ts","../../../src/utils/phrasesParsers/transformEditablePhrasesToViewablePhrases.ts","../../../src/app/interfaces.ts","../../../src/app/shared/zoom-class/Zoom.ts","../../../src/utils/docxParsers/docxToString.ts","../../../src/utils/docxParsers/editableObjectsToDocx.ts","../../../src/app/components/header/header.component.ts","../../../src/app/components/header/header.component.html","../../../src/app/pipes/does-string-represent-primitive.pipe.ts","../../../src/app/directives/focus.directive.ts","../../../src/app/pipes/isObject.pipe.ts","../../../src/app/pipes/has-these-props.pipe.ts","../../../src/app/components/workspace/data/tree-node/tree-node.component.ts","../../../src/app/components/workspace/data/tree-node/tree-node.component.html","../../../src/app/components/workspace/data/data.component.ts","../../../src/app/components/workspace/data/data.component.html","../../../src/utils/javascript/addString.ts","../../../src/utils/javascript/replaceString.ts","../../../src/utils/javascript/setCaretPosition.ts","../../../src/app/directives/selection-range.directive.ts","../../../src/app/components/workspace/editable-phrase/editable-phrase.component.ts","../../../src/app/components/workspace/editable-phrase/editable-phrase.component.html","../../../src/utils/handlebarTranslators/eachHandler.ts","../../../src/utils/handlebarTranslators/ifHandler.ts","../../../src/utils/handlebarTranslators/variableHandler.ts","../../../src/utils/handlebarTranslators/handlebarToReadableInstruction.ts","../../../src/utils/handlebarTranslators/clasificateStringBetweenTextAndHandlebars.ts","../../../src/app/components/workspace/viewable-phrase/variable-checker/variable-checker.component.ts","../../../src/app/components/workspace/viewable-phrase/variable-checker/variable-checker.component.html","../../../src/utils/phrasesParsers/stringToIsVariableAndExist.ts","../../../src/app/pipes/variable-exist.pipe.ts","../../../src/app/components/workspace/viewable-phrase/viewable-phrase.component.ts","../../../src/app/components/workspace/viewable-phrase/viewable-phrase.component.html","../../../src/app/components/workspace/workspace.component.ts","../../../src/app/components/workspace/workspace.component.html","../../../src/app/components/footer/footer.component.ts","../../../src/app/components/footer/footer.component.html","../../../src/app/app.component.ts","../../../src/app/app.component.html","../../../src/app/pipes/enters-to-br.pipe.ts","../../../src/app/pipes/is-array.pipe.ts","../../../src/app/directives/check-variable-existence.directive.ts","../../../src/app/app.module.ts","../../../saidtorres3-template-editor.ts"],"sourcesContent":["import * as JSZip from 'jszip'\r\nimport { parseString } from 'xml2js-preserve-spaces'\r\nimport { InputFileFormat, EditablePhrase } from './types';\r\n\r\nexport const docxToEditableObjects = async (docxFile: InputFileFormat): Promise<EditablePhrase[]> => {\r\n  return new Promise((resolve, reject) => {\r\n    // unzip the file\r\n    console.log(JSZip)\r\n    const zip = new JSZip();\r\n    zip.loadAsync(docxFile).then(function (zip) {\r\n      // get the content of the document.xml file\r\n      const wordFolder = zip.folder('word')\r\n      if (!wordFolder) { reject(`An error ocurred attempting to enter to the folder 'word' of the docx file.`); return }\r\n      const file = wordFolder.file(\"document.xml\")\r\n      if (!file) { reject(`An error ocurred attempting to enter to the load the file 'document.xml' in folder 'word' of the docx file.`); return }\r\n      file.async('string').then(function (XMLContent) {\r\n        const phrases: EditablePhrase[] = []\r\n        parseString(XMLContent, function (err, result) {\r\n          const paragraphs = result['w:document']['w:body'][0]['w:p']\r\n          const enter = '\\r\\n'\r\n          let phrase: EditablePhrase\r\n\r\n          paragraphs.forEach((paragraph: { [x: string]: { [x: string]: any[]; }[]; }, paragraphIndex: number) => {\r\n\r\n            const wRLabels = paragraph['w:r']\r\n            if (!wRLabels || !wRLabels.length) {\r\n              phrase = { value: enter, paragraphIndex, sentenseIndex: 0 }\r\n              phrases.push(phrase)\r\n            } else {\r\n              wRLabels.forEach((wRLabel: { [x: string]: any[]; }, wRLabelIndex) => {\r\n                let text: string = '';\r\n                const WTLabel = wRLabel['w:t']\r\n                // check if WTLabel is an object and has the \"_\" property\r\n                if (WTLabel && WTLabel.length && WTLabel[0]['_']) {\r\n                  text = WTLabel[0]['_']\r\n                } else {\r\n                  if (WTLabel && WTLabel.length && typeof WTLabel[0] === 'string') {\r\n                    text = WTLabel[0]\r\n                  } else if (WTLabel && WTLabel.length && WTLabel[0]['$']) {\r\n                    text = \" \"\r\n                  }\r\n                }\r\n                phrase = { value: text, paragraphIndex, sentenseIndex: wRLabelIndex }\r\n                phrases.push(phrase)\r\n              })\r\n            }\r\n\r\n          })\r\n\r\n          resolve(phrases)\r\n        });\r\n      })\r\n    });\r\n  })\r\n}","\r\nimport * as JSZip from 'jszip'\r\n\r\nexport interface ViewablePhrase {\r\n  type: ViewablePhraseType\r\n  value: string|ViewablePhrase[]\r\n}\r\n\r\nexport enum ViewablePhraseType {\r\n  text = 'text',\r\n  handlebar = 'handlebar',\r\n  if = 'if',\r\n  each = 'each',\r\n}\r\n\r\nexport interface EditablePhrase {\r\n  value: string,\r\n  paragraphIndex: number,\r\n  sentenseIndex: number\r\n}\r\n\r\nexport interface EditableObjectToDocxOpts {\r\n  modifiedObjects: EditablePhrase[]\r\n  fileIn: InputFileFormat,\r\n}\r\n\r\nexport interface PhraseCoords {\r\n  paragraphIndex: number,\r\n  sentenseIndex: number\r\n}\r\n\r\nexport interface CreateTemplateOutputDiffVisualizerOpts {\r\n  template: InputFileFormat,\r\n  output: InputFileFormat,\r\n  data: JSON | undefined,\r\n}\r\n\r\nexport type InputFileFormat = Parameters<JSZip['loadAsync']>[0];","import { EditablePhrase } from \"../docxParsers/types\";\r\n\r\nexport const transformEditablePhrasesToString = (phrases: EditablePhrase[]): string => {\r\n  phrases = phrases.map(a => ({ ...a }));\r\n  let phrasesStringtified = \"\"\r\n  phrases.forEach((phrase, index) => {\r\n    const phraseWihoutEnter = phrase.value.concat().replace('\\n', '')\r\n    if (phrases[index - 1] && phrases[index - 1].paragraphIndex < phrase.paragraphIndex) {\r\n      phrasesStringtified += '\\r\\n'\r\n    }\r\n    phrasesStringtified += phraseWihoutEnter\r\n  })\r\n  return phrasesStringtified\r\n}","import { ViewablePhrase, ViewablePhraseType } from \"../docxParsers/types\";\r\nimport { FindTagsOpts, FoundedTagsPosition } from \"./types\";\r\n\r\nexport const transformStringToViewablePhrases = (opts: FindTagsOpts): ViewablePhrase[] => {\r\n  const startsAndEnds: FoundedTagsPosition[] = []\r\n  let requirementsToCloseTag: { amountOfClosingTags: number, type: ViewablePhraseType | undefined } = { amountOfClosingTags: 0, type: undefined };\r\n  let startingTagPosition = 0;\r\n  let closingTagPosition = -1;\r\n  // sort tags by priority, lower priority first\r\n  opts.tags.sort((a, b) => { return a.priority - b.priority })\r\n  for (let i = 0; i < opts.text.length; i++) {\r\n    for (let j = 0; j < opts.tags.length; j++) {\r\n      const { startTag, closeTag, type: tagType } = opts.tags[j]\r\n      const isStartingATag = opts.text.substring(i, i + startTag.length) === startTag\r\n      const isEndingAnTag = opts.text.substring(i, i + closeTag.length) === closeTag\r\n      const isTheLastCharacter = i === opts.text.length - 1\r\n\r\n      if ((isTheLastCharacter) && (i != closingTagPosition)) {\r\n        const isThereText = (i - closingTagPosition) > 0\r\n        isThereText ? startsAndEnds.push({ start: closingTagPosition, end: i, type: ViewablePhraseType.text }) : null\r\n        break;\r\n      }\r\n\r\n      if (isStartingATag && ((!requirementsToCloseTag.amountOfClosingTags) || (requirementsToCloseTag.type === tagType))) {\r\n        if (!requirementsToCloseTag.amountOfClosingTags) {\r\n          const isThereText = (i - closingTagPosition) > 0\r\n          isThereText ? startsAndEnds.push({ start: closingTagPosition, end: i, type: ViewablePhraseType.text }) : null\r\n          startingTagPosition = i\r\n        }\r\n        requirementsToCloseTag = { amountOfClosingTags: requirementsToCloseTag.amountOfClosingTags + 1, type: opts.tags[j].type }\r\n        break;\r\n      } else if ((isEndingAnTag) && (tagType == requirementsToCloseTag.type)) {\r\n        requirementsToCloseTag.amountOfClosingTags--\r\n        if (requirementsToCloseTag.amountOfClosingTags == 0) {\r\n          closingTagPosition = i + closeTag.length\r\n          startsAndEnds.push({ start: startingTagPosition, end: closingTagPosition, type: opts.tags[j].type })\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  startsAndEnds.sort((a, b) => a.start - b.start)\r\n\r\n  let viewablePhrases: ViewablePhrase[] = []\r\n  startsAndEnds.forEach(a => {\r\n    viewablePhrases.push({\r\n      value: opts.text.substring(a.start, a.end),\r\n      type: a.type\r\n    })\r\n  })\r\n\r\n  return viewablePhrases\r\n}","import { EditablePhrase, ViewablePhrase, ViewablePhraseType } from \"../docxParsers/types\"\r\nimport { transformEditablePhrasesToString } from \"./transformEditablePhrasesToString\"\r\nimport { transformStringToViewablePhrases } from \"./transformStringToViewablePhrases\"\r\nimport { Tag } from \"./types\"\r\n\r\nexport const transformEditablePhrasesToViewablePhrases = (phrases: EditablePhrase[]): ViewablePhrase[] => {\r\n  let priority = 0\r\n  const phrasesStringtified = transformEditablePhrasesToString(phrases)\r\n  const findEach: Tag = { startTag: '{{#each', closeTag: '{{/each}}', type: ViewablePhraseType.each, priority: priority++ }\r\n  const findIf: Tag = { startTag: \"{{#if\", closeTag: \"{{/if}}\", type: ViewablePhraseType.if, priority: priority++ }\r\n  const findHandlebars: Tag = { startTag: \"{{\", closeTag: \"}}\", type: ViewablePhraseType.handlebar, priority: priority++ }\r\n  return transformStringToViewablePhrases({ text: phrasesStringtified, tags: [findIf, findEach, findHandlebars] })\r\n}","import { EditablePhrase, InputFileFormat } from \"../utils/docxParsers/types\";\r\n\r\nexport interface DocxFile {\r\n  name: string;\r\n  lastModifiedDate: number;\r\n  content: InputFileFormat;\r\n}\r\n\r\nexport interface WorkSpace {\r\n  dropingFile: boolean;\r\n  fileDropDown: boolean;\r\n  paperZoom: { value: number };\r\n  dataZoom: { value: number };\r\n  mode: ViewMode;\r\n  historyIndex: number;\r\n  lastModifiedEditablePhraseIndex: number;\r\n  lastSelection: SelectionRange;\r\n  searchData?: string;\r\n  needToFocus: boolean;\r\n}\r\n\r\nexport interface SelectionRange {\r\n  start: number;\r\n  end: number;\r\n}\r\n\r\nexport enum ViewMode {\r\n  edit = \"edit\",\r\n  view = \"view\",\r\n  simulation = \"simulation\",\r\n  editView = \"editView\",\r\n}\r\n\r\nexport interface History {\r\n  editablePhrases: EditablePhrase[];\r\n  lastModifiedEditablePhraseIndex: number;\r\n  selection: SelectionRange;\r\n}\r\n","import { Subject } from \"rxjs\";\r\n\r\nexport class Zoom {\r\n\r\n  private zoomSubject = new Subject<undefined>();\r\n  public zoomObserver = this.zoomSubject.asObservable();\r\n\r\n  public makeZoom(e: WheelEvent, zoomRef: { value: number }) {\r\n    if (e.ctrlKey) {\r\n      e.preventDefault();\r\n      const delta = e.deltaY;\r\n      this.zoomSubject.next(undefined);\r\n      if (delta < 0) {\r\n        this.zoomIn(zoomRef);\r\n      } else {\r\n        this.zoomOut(zoomRef);\r\n      }\r\n    }\r\n  }\r\n\r\n  public zoomIn(zoomRef: { value: number }) {\r\n    zoomRef.value < 2 ? (zoomRef.value += 0.1) : undefined;\r\n  }\r\n\r\n  public zoomOut(zoomRef: { value: number }) {\r\n    zoomRef.value > 0.11 ? (zoomRef.value -= 0.1) : undefined;\r\n  }\r\n\r\n  public zoomNormal(zoomRef: { value: number }) {\r\n    zoomRef.value = 1;\r\n  }\r\n}\r\n","import * as JSZip from \"jszip\";\r\nimport { parseString } from \"xml2js-preserve-spaces\";\r\nimport { InputFileFormat } from \"./types\";\r\n\r\nexport const docxToString = async (\r\n  docxFile: InputFileFormat\r\n): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    // unzip the file\r\n    const zip = new JSZip();\r\n    zip.loadAsync(docxFile).then(function (zip) {\r\n      // get the content of the document.xml file\r\n      const wordFolder = zip.folder(\"word\");\r\n      if (!wordFolder) {\r\n        reject(\r\n          `An error ocurred attempting to enter to the folder 'word' of the docx file.`\r\n        );\r\n        return;\r\n      }\r\n      const file = wordFolder.file(\"document.xml\");\r\n      if (!file) {\r\n        reject(\r\n          `An error ocurred attempting to enter to the load the file 'document.xml' in folder 'word' of the docx file.`\r\n        );\r\n        return;\r\n      }\r\n      file.async(\"string\").then(function (XMLContent) {\r\n        parseString(XMLContent, function (err, result) {\r\n          const paragraphs = result[\"w:document\"][\"w:body\"][0][\"w:p\"];\r\n          let docxInTxt: string = \"\";\r\n\r\n          paragraphs.forEach(\r\n            (paragraph: { [x: string]: { [x: string]: any[] }[] }) => {\r\n              let textInTheParagraph: string = \"\";\r\n              const saveTheParagraph = () => {\r\n                textInTheParagraph += \"\\r\\n\";\r\n                docxInTxt += textInTheParagraph;\r\n              };\r\n              const WRLabel = paragraph[\"w:r\"];\r\n              if (!WRLabel || !WRLabel.length) {\r\n                saveTheParagraph();\r\n                return;\r\n              }\r\n              WRLabel.forEach((WR: { [x: string]: any[] }) => {\r\n                let text: string = \"\";\r\n                const WTLabel = WR[\"w:t\"];\r\n                // check if WTLabel is an object and has the \"_\" property\r\n                if (WTLabel && WTLabel.length && WTLabel[0][\"_\"]) {\r\n                  text = WTLabel[0][\"_\"];\r\n                } else {\r\n                  if (\r\n                    WTLabel &&\r\n                    WTLabel.length &&\r\n                    typeof WTLabel[0] === \"string\"\r\n                  ) {\r\n                    text = WTLabel[0];\r\n                  } else {\r\n                    if (WTLabel && WTLabel.length && WTLabel[0][\"$\"]) {\r\n                      text = \" \";\r\n                    }\r\n                  }\r\n                }\r\n                textInTheParagraph += text;\r\n              });\r\n              saveTheParagraph();\r\n            }\r\n          );\r\n\r\n          resolve(docxInTxt);\r\n        });\r\n      });\r\n    });\r\n  });\r\n};\r\n","import * as JSZip from 'jszip'\r\nimport xml2js from 'xml2js-preserve-spaces'\r\nimport { EditableObjectToDocxOpts, EditablePhrase, PhraseCoords } from './types';\r\n\r\nexport const editableObjectToDocx = async (opts: EditableObjectToDocxOpts): Promise<File> => {\r\n  return new Promise((resolve, reject) => {\r\n    // unzip the file\r\n    const zipHandler = new JSZip();\r\n    zipHandler.loadAsync(opts.fileIn).then(function (zipContent) {\r\n      const file = zipContent.file(\"word/document.xml\")\r\n      if (!file) { reject(`An error ocurred attempting to enter to the load the file 'document.xml' in folder 'word' of the docx file.`); return }\r\n\r\n      file.async('text').then(function (XMLContent) {\r\n        xml2js.parseString(XMLContent, function (err, result) {\r\n          const paragraphs = result['w:document']['w:body'][0]['w:p']\r\n          paragraphs.forEach((paragraph: { [x: string]: { [x: string]: any[]; }[]; }, paragraphIndex: number) => {\r\n            const wRLabels = paragraph['w:r']\r\n            if (!wRLabels || !wRLabels.length) { return paragraph }\r\n            wRLabels.forEach((wRLabel: { [x: string]: any[]; }, wRLabelIndex) => {\r\n              const modfiedPhrase = getModifiedPhrase(opts.modifiedObjects, { paragraphIndex, sentenseIndex: wRLabelIndex })\r\n              if (!modfiedPhrase) { return paragraph }\r\n              // check if WTLabel is an object and has the \"_\" property\r\n              if (wRLabel['w:t'] && wRLabel['w:t'].length && wRLabel['w:t'][0]['_']) {\r\n                wRLabel['w:t'][0]['_'] = modfiedPhrase.value\r\n              } else {\r\n                if (wRLabel['w:t'] && wRLabel['w:t'].length && typeof wRLabel['w:t'][0] === 'string') {\r\n                  wRLabel['w:t'][0] = modfiedPhrase.value\r\n                }\r\n              }\r\n            })\r\n          })\r\n          const modifiedXML = new xml2js.Builder().buildObject(result)\r\n          // replace 'file' variable with modifiedXML\r\n          zipContent.file('word/document.xml', modifiedXML)\r\n          zipContent.generateAsync({ type: 'blob' }).then(function (outputFile) {\r\n            resolve(outputFile as File)\r\n          })\r\n        });\r\n      })\r\n    });\r\n  })\r\n}\r\n\r\nconst getModifiedPhrase = (phrases: EditablePhrase[], phaseCoords: PhraseCoords): EditablePhrase | undefined => {\r\n  const phrase = phrases.find((phrase: EditablePhrase) => {\r\n    if (phrase.paragraphIndex === phaseCoords.paragraphIndex && phrase.sentenseIndex === phaseCoords.sentenseIndex) {\r\n      return phrase\r\n    }\r\n  })\r\n  return phrase\r\n}","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { DocxFile, History, WorkSpace } from \"../../../app/interfaces\";\r\nimport { docxToString } from \"../../../utils/docxParsers/docxToString\";\r\nimport { editableObjectToDocx } from \"../../../utils/docxParsers/editableObjectsToDocx\";\r\nimport { EditablePhrase } from \"../../../utils/docxParsers/types\";\r\n\r\n@Component({\r\n  selector: \"app-header[history][docxFile][uploadFileInput][editablePhrases]\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.less\", \"../../shared/styles/commonStyles.less\"],\r\n})\r\nexport class HeaderComponent {\r\n  @Input() workspace: WorkSpace;\r\n  @Input() docxFile: DocxFile;\r\n  @Input() history: History[];\r\n  @Input() uploadFileInput: HTMLInputElement;\r\n  @Input() editablePhrases: EditablePhrase[];\r\n  @Output() fileChange: EventEmitter<InputEvent> = new EventEmitter<InputEvent>();\r\n\r\n  onFileChangeHandler(e: Event) {\r\n    const event = e as InputEvent;\r\n    this.fileChange.emit(event);\r\n  }\r\n\r\n  public save() {\r\n    if (!this.docxFile.content) {\r\n      return;\r\n    }\r\n    // update the last modified date \r\n    console.log(\r\n      this.docxFile.content\r\n    )\r\n    editableObjectToDocx({\r\n      modifiedObjects: this.history[this.workspace.historyIndex].editablePhrases,\r\n      fileIn: this.docxFile.content,\r\n    }).then((newDocx) => {\r\n      // this.setTemplateFromFile(newDocx); TODO\r\n    });\r\n  }\r\n\r\n  public saveToComputer() {\r\n    if (!this.docxFile.content) {\r\n      return;\r\n    }\r\n    editableObjectToDocx({\r\n      modifiedObjects: this.history[this.workspace.historyIndex].editablePhrases,\r\n      fileIn: this.docxFile.content,\r\n    }).then((newDocx) => {\r\n      const url = URL.createObjectURL(newDocx);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = this.docxFile.name;\r\n      link.click();\r\n      link.remove();\r\n      URL.revokeObjectURL(url);\r\n      docxToString(newDocx).then((string) => {\r\n        console.log(string);\r\n      });\r\n    });\r\n  }\r\n\r\n  public fileDropDownToggle() {\r\n    this.workspace.fileDropDown = true;\r\n    let clickCount = 0;\r\n    const quitDropDown = (e) => {\r\n      clickCount++;\r\n      if (clickCount > 1) {\r\n        this.workspace.fileDropDown = false;\r\n        window.onclick = null;\r\n      }\r\n    };\r\n    window.onclick = quitDropDown;\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <input\r\n    #uploadFileInput\r\n    (change)=\"onFileChangeHandler($event)\"\r\n    class=\"invisible\"\r\n    type=\"file\"\r\n    id=\"template\"\r\n    name=\"template\"\r\n    accept=\".docx\"\r\n  />\r\n  <div *ngIf=\"workspace.fileDropDown\" class=\"header__element__dropdown\">\r\n    <p\r\n      class=\"header__element__dropdown__item\"\r\n      [class.header__element__dropdown__item--inactive]=\"!docxFile.content\"\r\n      (click)=\"save()\"\r\n    >\r\n      Guardar\r\n    </p>\r\n    <p\r\n      class=\"header__element__dropdown__item\"\r\n      [class.header__element__dropdown__item--inactive]=\"!docxFile.content\"\r\n      (click)=\"saveToComputer()\"\r\n    >\r\n      Guardar a computadora\r\n    </p>\r\n    <p\r\n      class=\"header__element__dropdown__item\"\r\n      (click)=\"uploadFileInput.click()\"\r\n    >\r\n      Abrir template\r\n    </p>\r\n  </div>\r\n  <div\r\n    class=\"header__element header__element--file\"\r\n    (click)=\"fileDropDownToggle()\"\r\n  >\r\n    <label>Archivo</label>\r\n  </div>\r\n  <div class=\"header__element header__element--title\">\r\n    {{docxFile.name}}\r\n  </div>\r\n  <div class=\"header__element\" *ngIf=\"docxFile.lastModifiedDate\">\r\n    <!-- date with hour -->\r\n    Última modificación: {{docxFile.lastModifiedDate | date: 'dd/MM/yyyy HH:mm'}}\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"doesStringRepresentPrimitive\",\r\n})\r\nexport class DoesStringRepresentPrimitivePipe implements PipeTransform {\r\n  transform(value: string): boolean {\r\n    return (\r\n      value === \"number\" ||\r\n      value === \"string\" ||\r\n      value === \"boolean\" ||\r\n      value === \"integer\" ||\r\n      value === \"float\"\r\n    );\r\n  }\r\n}\r\n","import { Directive, ElementRef, Inject, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[focus]'\r\n})\r\nexport class FocusDirective {\r\n  @Input() focus: boolean;\r\n  constructor(@Inject(ElementRef) private element: ElementRef) { }\r\n  protected ngOnChanges() {\r\n    if (this.focus) {\r\n      const element = this.element.nativeElement as HTMLElement\r\n      element.focus();\r\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'isObject'\r\n})\r\nexport class isObject implements PipeTransform {\r\n\r\n transform<T>(value: T | Paradox): value is Paradox {\r\n    return typeof value === 'object';\r\n  }\r\n\r\n}\r\n\r\nexport interface Paradox {\r\n  [key: string]: A;\r\n}\r\n\r\nexport interface A {\r\n    type: string;\r\n    title: string;\r\n    description?: string;\r\n    format?: string;\r\n    required?: string[];\r\n    enum?: string[];\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    minItems?: number;\r\n    maxItems?: number;\r\n    items?: A;\r\n    properties?: Paradox;\r\n  }","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'hasTheseProps'\r\n})\r\nexport class HasThesePropsPipe implements PipeTransform {\r\n\r\n  transform(value: any, ...args: string[]): boolean {\r\n    if(typeof value !== 'object') return false;\r\n    const props = Object.keys(value)\r\n    const answersStorage = {};\r\n    \r\n    for (const prop of args) {\r\n      if (props.includes(prop)) {\r\n        answersStorage[prop] = value[prop]\r\n      }\r\n    }\r\n    const isTrue = Object.keys(answersStorage).length === args.length\r\n    // debugger;\r\n    return isTrue;\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\r\nimport { Paradox } from \"../../../../../app/pipes/isObject.pipe\";\r\nimport { WorkSpace } from \"../../../../../app/interfaces\";\r\nimport { DoesStringRepresentPrimitivePipe } from \"../../../../../app/pipes/does-string-represent-primitive.pipe\";\r\n\r\n@Component({\r\n  selector: \"tree-node[workspace]\",\r\n  templateUrl: \"./tree-node.component.html\",\r\n  styleUrls: [\r\n    \"./tree-node.component.less\",\r\n    \"../../../../shared/styles/commonStyles.less\",\r\n  ],\r\n})\r\nexport class TreeNodeComponent {\r\n  @ViewChild(\"treeRoot\") treeRoot: ElementRef<HTMLDivElement>;\r\n  @Input() node: Paradox;\r\n  // @Input() node:  any;\r\n  @Input() tabulation: number;\r\n  @Input() path: string = \"\";\r\n  @Input() workspace: WorkSpace;\r\n  public tabulationLenght: number = 20;\r\n  public showRealValue = false;\r\n  public actualIndex: number;\r\n  public isHovering: boolean = false;\r\n\r\n  ngOnInit() {\r\n    if (this.tabulation == undefined) {\r\n      this.tabulation = 0;\r\n    }\r\n  }\r\n\r\n  public setHovering(isHovering: boolean) {\r\n    this.isHovering = isHovering;\r\n  }\r\n\r\n  // public showPath(item: Paradox): string {\r\n  public showPath(item: any): string {\r\n    return `{{${this.path + item.key}}}`;\r\n  }\r\n\r\n  public pathToSend(item: any): string {\r\n    if (item.key === \"items\") return this.path + \"∀.\";\r\n    if (item.key === \"properties\") return this.path + \"\";\r\n    return this.path + item.key + \".\";\r\n  }\r\n\r\n  public showRealPath(e: MouseEvent, index: number) {\r\n    this.showRealValue = true;\r\n    this.actualIndex = index;\r\n    const element = e.target as HTMLAnchorElement;\r\n    element.onmouseleave = () => {\r\n      this.showRealValue = false;\r\n      element.onmouseleave = null;\r\n    };\r\n  }\r\n\r\n  public isFoundedItem(\r\n    titleValue: string | undefined,\r\n    pathValue: string | undefined\r\n  ): boolean {\r\n    titleValue = titleValue\r\n      ?.trim()\r\n      ?.toLowerCase()\r\n      ?.normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\"); // replace accent characters to non accent characters\r\n    pathValue = pathValue\r\n      ?.trim()\r\n      ?.toLowerCase()\r\n      ?.normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .replace(/\\./g, \" \");\r\n    const search = this.workspace.searchData\r\n      ?.trim()\r\n      ?.toLowerCase()\r\n      ?.normalize(\"NFD\")\r\n      .replace(/[\\u0300-\\u036f]/g, \"\")\r\n      .replace(/\\./g, \" \");\r\n    if (titleValue && search) {\r\n      const includesInTitle = titleValue.includes(search);\r\n      if (includesInTitle) {\r\n        return true;\r\n      } else {\r\n        if (pathValue && search) {\r\n          return pathValue.includes(search);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public replaceSelectionWithInnertext(e: MouseEvent, type: string) {\r\n    const primitivizerChecker = new DoesStringRepresentPrimitivePipe();\r\n    const isPrimitive = primitivizerChecker.transform(type);\r\n    if (!isPrimitive) return;\r\n    let text = (e.target as HTMLDivElement).innerHTML;\r\n    text = this.replaceArraySymbolToEachSentence(text);\r\n    document.execCommand(\"insertText\", true, text);\r\n  }\r\n\r\n  private replaceArraySymbolToEachSentence(text: string): string {\r\n    const dividedText = text.replace(/[\\{\\}]/g, \"\").split(\".\");\r\n    console.log(dividedText);\r\n    let posibleResult = \"\";\r\n    for (let [index, sentence] of dividedText.entries()) {\r\n      const regexToFindLastContentVariable = /}}{{([\\w\\.]+)}}{{\\/each}}/g;\r\n      const match = regexToFindLastContentVariable.exec(posibleResult);\r\n      const arrayName = dividedText[index - 1];\r\n      const arrayProp = dividedText[index + 1];\r\n      if (\r\n        sentence.includes(\"∀\") &&\r\n        !dividedText[index - 1]?.includes(\"∀\") &&\r\n        !dividedText[index + 1]?.includes(\"∀\")\r\n      ) {\r\n        if (!posibleResult) {\r\n          posibleResult = `{{#each ${arrayName}}}{{${arrayProp}}}{{/each}}`;\r\n        } else {\r\n          // replace text of the first group\r\n          posibleResult = posibleResult.replace(\r\n            match[1],\r\n            `#each ${arrayName}}}{{${arrayProp}}}{{/each`\r\n          );\r\n        }\r\n      } else if (match && !dividedText[index - 1]?.includes(\"∀\")) {\r\n        console.log(match[1]);\r\n        posibleResult = posibleResult.replace(\r\n          match[1],\r\n          `${match[1]}.${sentence}`\r\n        );\r\n      }\r\n    }\r\n    if (posibleResult) return posibleResult;\r\n    return text;\r\n  }\r\n}","<div\r\n  #treeRoot\r\n  *ngIf=\"node\"\r\n  (mouseenter)=\"setHovering(true)\"\r\n  (mouseleave)=\"setHovering(false)\"\r\n>\r\n  <div\r\n    #element\r\n    *ngFor=\"let item of (node | keyvalue), let i = index\"\r\n    comment=\"node = {name: 'alcachofas'}  --> |keyvalue --> node = [{key: 'name', value: 'alcachofas'}] --> node[0] as item --> {key: 'name', value: 'alcachofas'}\"\r\n    [ngStyle]=\"{'margin-left': tabulation+'px'}\"\r\n    class=\"not-draggable\"\r\n    (mouseover)=\"showRealPath($event, i)\"\r\n  >\r\n    <div\r\n      *ngIf=\"item.value.title\"\r\n      commment=\"if prop of node is an object and this object has a property called 'title'\"\r\n      (click)=\"replaceSelectionWithInnertext($event, item.value.type)\"\r\n      class=\"data-node\"\r\n      [class]=\"(item.value.type | doesStringRepresentPrimitive) ? 'primitive-value' : item.value.type === 'array' ? 'array-value' : 'not-primitive-value'\"\r\n      [class.founded]=\"isFoundedItem(item.value.title, showPath(item))\"\r\n      [focus]=\"isFoundedItem(item.value.title, showPath(item))\"\r\n      contenteditable=\"false\"\r\n      >{{ showRealValue && i==actualIndex && (item.value.type |\r\n      doesStringRepresentPrimitive) && isHovering ? showPath(item) :\r\n      (item.value.title) }}</div\r\n    >\r\n    <ng-container *ngIf=\"item.value | isObject\">\r\n      <tree-node\r\n        [node]=\"item.value\"\r\n        [tabulation]=\"((item.value | hasTheseProps:'title':'type') ? tabulationLenght : 0)\"\r\n        [path]=\"pathToSend(item)\"\r\n        [workspace]=\"workspace\"\r\n      ></tree-node>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { WorkSpace } from \"../../../../app/interfaces\";\r\nimport { Zoom } from \"../../../../app/shared/zoom-class/Zoom\";\r\n\r\n@Component({\r\n  selector: \"workspace-data\",\r\n  templateUrl: \"./data.component.html\",\r\n  styleUrls: [\r\n    \"./data.component.less\",\r\n    \"../../../shared/styles/commonStyles.less\",\r\n  ],\r\n})\r\nexport class DataComponent implements OnDestroy, AfterViewInit {\r\n  @Input() data: any;\r\n  @Input() workspace: WorkSpace;\r\n\r\n  @ViewChild(\"dataElement\") dataElement: ElementRef<HTMLDivElement>;\r\n  @ViewChild(\"dataContainer\") dataContainer: ElementRef<HTMLDivElement>;\r\n  @ViewChild(\"dataContainerData\") dataContainerData: ElementRef<HTMLDivElement>;\r\n\r\n  public zoom: Zoom = new Zoom();\r\n  private zoomSuscription: Subscription;\r\n\r\n  ngAfterViewInit(): void {\r\n    console.log(\"testinggg.\");\r\n    console.log(this.data);\r\n    this.zoomSuscription = this.zoom.zoomObserver.subscribe(() => {\r\n      this.updateDataColumnsAmmount();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.zoomSuscription.unsubscribe();\r\n  }\r\n\r\n  public resizeDataContainerToCursorPosition(e: MouseEvent) {\r\n    const startX = e.clientX;\r\n    const startWidth = this.dataElement.nativeElement.clientWidth;\r\n    window.onmousemove = (e) => {\r\n      const deltaX = e.clientX - startX;\r\n      const newWidth = startWidth + deltaX;\r\n      this.dataElement.nativeElement.style.width = `${newWidth}px`;\r\n      this.updateDataColumnsAmmount();\r\n      const onMouseUp = () => {\r\n        window.onmousemove = null;\r\n        window.onmouseup = null;\r\n      };\r\n      window.onmouseup = onMouseUp;\r\n    };\r\n    window.onmouseup = () => {\r\n      window.onmousemove = null;\r\n      window.onmouseup = null;\r\n    };\r\n  }\r\n\r\n  public searchInData(e: Event) {\r\n    const inputEvent = e as InputEvent;\r\n    const searchData = (inputEvent.target as HTMLInputElement).value;\r\n    this.workspace.searchData = searchData;\r\n  }\r\n\r\n  private updateDataColumnsAmmount() {\r\n    const newWidth = this.dataElement.nativeElement.clientWidth;\r\n    if (this.dataContainerData) {\r\n      if (newWidth > 1700) {\r\n        this.dataContainerData.nativeElement.classList.add(\r\n          \"workspace__data__data-container__data--three-columns\"\r\n        );\r\n      } else if (newWidth > 1000) {\r\n        this.dataContainerData.nativeElement.classList.remove(\r\n          \"workspace__data__data-container__data--three-columns\"\r\n        );\r\n        this.dataContainerData.nativeElement.classList.add(\r\n          \"workspace__data__data-container__data--two-columns\"\r\n        );\r\n      } else if (newWidth < 1000) {\r\n        this.dataContainerData.nativeElement.classList.remove(\r\n          \"workspace__data__data-container__data--three-columns\"\r\n        );\r\n        this.dataContainerData.nativeElement.classList.remove(\r\n          \"workspace__data__data-container__data--two-columns\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div\r\n  #dataElement\r\n  class=\"workspace__data\"\r\n  (wheel)=\"zoom.makeZoom($event, workspace.dataZoom)\"\r\n>\r\n  <div class=\"workspace__data__content\">\r\n    <div\r\n      [ngStyle]=\"{'zoom': workspace.dataZoom.value}\"\r\n      #dataContainer\r\n      class=\"workspace__data__content__data-container\"\r\n    >\r\n      <input\r\n        class=\"workspace__data__content__search-bar\"\r\n        (input)=\"searchInData($event)\"\r\n      />\r\n      <div\r\n        #dataContainerData\r\n        class=\"workspace__data__content__data-container__data\"\r\n        *ngIf=\"data\"\r\n      >\r\n        <tree-node [node]=\"data\" [workspace]=\"workspace\"></tree-node>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    #grabableBarData\r\n    class=\"workspace__data__content__grabable-bar\"\r\n    (mousedown)=\"resizeDataContainerToCursorPosition($event)\"\r\n  ></div>\r\n</div>\r\n","export function addStr(opts: AddStringOpts): string {\r\n  return (\r\n    opts.string.substring(0, opts.index) + opts.stringToAdd + opts.string.substring(opts.index, opts.string.length)\r\n  );\r\n}\r\n\r\ninterface AddStringOpts {\r\n  string: string;\r\n  index: number;\r\n  stringToAdd: string;\r\n}\r\n","export function replaceStr(opts: ReplaceStringOpts): string {\r\n  return (\r\n    opts.str.substring(0, opts.firstPos) +\r\n    opts.stringToAdd +\r\n    opts.str.substring(opts.secondPos)\r\n  );\r\n}\r\n\r\ninterface ReplaceStringOpts {\r\n  str: string;\r\n  firstPos: number;\r\n  secondPos: number;\r\n  stringToAdd: string;\r\n}\r\n","export const setCaretPosition = (el: any, pos: number) => {\r\n    // Loop through all child nodes\r\n    for (var node of el.childNodes) {\r\n      if (node.nodeType == 3) {\r\n        // we have a text node\r\n        if (node.length >= pos) {\r\n          // finally add our range\r\n          var range = document.createRange(),\r\n            sel = window.getSelection();\r\n          range.setStart(node, pos);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n          return -1; // we are done\r\n        } else {\r\n          pos -= node.length;\r\n        }\r\n      } else {\r\n        pos = setCaretPosition(node, pos);\r\n        if (pos == -1) {\r\n          return -1; // no need to finish the for loop\r\n        }\r\n      }\r\n    }\r\n    return pos; // needed because of recursion stuff\r\n  }","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n} from \"@angular/core\";\r\nimport { setCaretPosition } from \"../../utils/javascript/setCaretPosition\";\r\nimport { SelectionRange } from \"../interfaces\";\r\n\r\n@Directive({\r\n  selector: \"[selectionRange]\",\r\n})\r\nexport class SelectionRangeDirective implements AfterViewInit, OnChanges {\r\n  @Input() selectionRange: SelectionRange;\r\n  constructor(@Inject(ElementRef) private element: ElementRef) {}\r\n  ngAfterViewInit(): void {\r\n    if (this.selectionRange) {\r\n      const targetElement = this.element.nativeElement as HTMLElement;\r\n      // set caret position at the selection range start\r\n      setCaretPosition(targetElement, this.selectionRange.start);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.selectionRange) {\r\n      const targetElement = this.element.nativeElement as HTMLElement;\r\n      // set caret position at the selection range start\r\n      setCaretPosition(targetElement, this.selectionRange.start);\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { WorkSpace } from \"../../../../app/interfaces\";\r\nimport { EditablePhrase } from \"../../../../utils/docxParsers/types\";\r\nimport { addStr } from \"../../../../utils/javascript/addString\";\r\nimport { replaceStr } from \"../../../../utils/javascript/replaceString\";\r\nimport { setCaretPosition } from \"../../../../utils/javascript/setCaretPosition\";\r\n\r\n@Component({\r\n  selector: \"editable-phrases[editablePhrases][workspace]\",\r\n  templateUrl: \"./editable-phrase.component.html\",\r\n  styleUrls: [\"./editable-phrase.component.less\"],\r\n})\r\nexport class EditablePhraseComponent {\r\n  constructor() {}\r\n\r\n  @Input() editablePhrases: EditablePhrase[];\r\n  @Input() workspace: WorkSpace;\r\n  @Output() editablePhraseChanged = new EventEmitter<{\r\n    inputEvent: Event;\r\n    index: number;\r\n  }>();\r\n\r\n  public pasteContentWithoutStylesAndEnters(e: ClipboardEvent, index: number) {\r\n    // todo\r\n    e.preventDefault();\r\n    const element = e.target as HTMLElement;\r\n    let editablePhraseValue = element.innerText;\r\n    let text = e.clipboardData.getData(\"text/plain\")?.replace(/\\n/g, \" \");\r\n    const selection = window.getSelection();\r\n    const caretFirstPosition = selection.anchorOffset;\r\n    const caretLastPosition = selection.focusOffset;\r\n    let newTxt: string;\r\n    if (caretFirstPosition === caretLastPosition) { // if caret is in the same position\r\n      newTxt = addStr({\r\n        string: editablePhraseValue,\r\n        index: caretFirstPosition,\r\n        stringToAdd: text,\r\n      });\r\n    } else {\r\n      // replace text from caretFirstPosition to caretLastPosition\r\n      newTxt = replaceStr({\r\n        firstPos: caretFirstPosition,\r\n        secondPos: caretLastPosition,\r\n        str: editablePhraseValue,\r\n        stringToAdd: text,\r\n      });\r\n    }\r\n    // create input event\r\n    var event = new Event(\"input\", {\r\n      bubbles: true,\r\n      cancelable: true,\r\n    });\r\n    // set new value\r\n    element.innerText = newTxt;\r\n    element.dispatchEvent(event);\r\n    setCaretPosition(element, caretFirstPosition);\r\n  }\r\n\r\n  public onEdtitablePhraseChanged(e: Event, index: number) {\r\n    this.editablePhraseChanged.emit({ inputEvent: e, index });\r\n  }\r\n}\r\n","<ng-container *ngFor=\"let editablePhrase of editablePhrases; let index = index\">\r\n  <br\r\n    *ngIf=\"editablePhrases[index-1] && editablePhrases[index-1].paragraphIndex < editablePhrase.paragraphIndex\"\r\n  />\r\n  <span\r\n    *ngIf=\"editablePhrase.value !== '\\r\\n'\"\r\n    class=\"editable-phrase\"\r\n    contentEditable=\"true\"\r\n    (input)=\"onEdtitablePhraseChanged($event, index)\"\r\n    (paste)=\"pasteContentWithoutStylesAndEnters($event, index)\"\r\n    (dragover)=\"$event.preventDefault()\"\r\n    [selectionRange]=\"workspace.lastModifiedEditablePhraseIndex === index ? workspace.lastSelection : undefined\"\r\n    [class.workspace__template__paper-container__paper__phrase--selected]=\"workspace.lastModifiedEditablePhraseIndex === index\"\r\n    >{{editablePhrase.value}}</span\r\n  >\r\n</ng-container>\r\n","import { ReadableInstruction } from \"./types\";\r\n\r\nconst eachID = '{{#each '\r\n\r\nconst matchOneVariable = /^[\\S]+$/g;\r\nconst matchTail = /tail\\s?([\\S][^\\(\\)\\s]+)/g\r\n\r\nexport const eachHandler = (handlebar: ReadableInstruction) => {\r\n  let insideValue = filterValue(handlebar.value)\r\n\r\n  if (insideValue.match(matchOneVariable)) {\r\n    handlebar.value = insideValue\r\n  } else if (insideValue.match(matchTail)) {\r\n    const match = matchTail.exec(insideValue)\r\n    const variableName = match[1]\r\n    handlebar.value = `${variableName}, exceptuando el primer elemento`\r\n  }\r\n\r\n  handlebar.value = `Por cada elemento en ${handlebar.value}, mostrar:`\r\n  handlebar.handlebarType = 'each'\r\n  handlebar.margin = handlebar.margin - 30\r\n  return handlebar\r\n}\r\n\r\nconst filterValue = (value: string): string => {\r\n  let content = value.replace(eachID, '')\r\n  content = content.replace('}}', '')\r\n  return content\r\n}","import { ReadableInstruction } from \"./types\";\r\n\r\nconst ifID = '{{#if '\r\n\r\nconst matchEveryPluck = /^\\(every\\s?\\(pluck ([\\S]+) '([\\S]+)'\\)\\s?([\\S]+)\\)$/g;\r\nconst matchEqual = /^\\(equal\\s?([\\S]+) '?([\\S]+)'?\\)$/g;\r\nconst matchOneVariable = /^[\\S]+$/g;\r\nconst matchNotOneVariable = /^\\(?not [\\S]+\\)?$/g;\r\nconst matchGreatherThan = /^\\(?gt ([\\S]+) (\\d+)\\)?$/g;\r\nconst matchTail = /tail\\s?([\\S][^\\(\\)\\s]+)/g\r\n\r\nexport const ifHandler = (handlebar: ReadableInstruction): ReadableInstruction => {\r\n  let insideValue = filterValue(handlebar.value)\r\n  if (insideValue.match(matchEveryPluck)) {\r\n    const match = matchEveryPluck.exec(insideValue)\r\n    const variableName = match[1]\r\n    const selectedProp = match[2]\r\n    const filter = match[3]\r\n    handlebar.value = translateEveryPluck({ variableName, selectedProp, filter })\r\n  } else if (insideValue.match(matchEqual)) {\r\n    const match = matchEqual.exec(insideValue)\r\n    const variableName = match[1]\r\n    const selectedProp = match[2]\r\n    handlebar.value = translateEqual({ variableName, comparedValue: selectedProp })\r\n  } else if (insideValue.match(matchOneVariable)) {\r\n    insideValue = cleanInsideValue(insideValue)\r\n    insideValue = insideValue.concat(' contiene valor y no es falso y no es igual 0')\r\n    handlebar.value = insideValue\r\n  } else if (insideValue.match(matchGreatherThan)) {\r\n    const match = matchGreatherThan.exec(insideValue)\r\n    const variableName = match[1]\r\n    const selectedProp = match[2]\r\n    handlebar.value = `el valor de ${variableName} es mayor a ${selectedProp}`\r\n  } else if (insideValue.match(matchNotOneVariable)) {\r\n    insideValue = cleanInsideValue(insideValue)\r\n    insideValue = insideValue.concat(' no contiene valor o es falso o es igual 0')\r\n    handlebar.value = insideValue\r\n  } else if(insideValue.match(matchTail)) {\r\n    const match = matchTail.exec(insideValue)\r\n    const variableName = match[1]\r\n    handlebar.value = `${variableName} contiene valor y no es falso y no es igual 0`\r\n  }\r\n\r\n  handlebar.value = `Si ${handlebar.value}, entonces mostrar:`\r\n  handlebar.handlebarType = 'if'\r\n  handlebar.margin = handlebar.margin - 30\r\n  return handlebar\r\n}\r\n\r\nconst filterValue = (value: string): string => {\r\n  let content = value.replace(ifID, '')\r\n  content = content.replace('}}', '')\r\n  return content\r\n}\r\n\r\nconst cleanInsideValue = (insideValue: string) => {\r\n  insideValue = insideValue.replace('@index', 'el numero del elemento que se está operando')\r\n  insideValue = insideValue.replace('@last', 'es el último elemento de la lista y')\r\n  insideValue = insideValue.replace(/[()]/g, '')\r\n  insideValue = insideValue.replace('not ', '')\r\n  return insideValue\r\n}\r\n\r\nconst translateEveryPluck = (opts: TranslateEveryPluckOpts) => {\r\n  return `la propiedad ${opts.selectedProp} de TODOS los elementos de ${opts.variableName} son equivalentes a ${opts.filter}`\r\n}\r\n\r\nconst translateEqual = (opts: TranslateEqualOpts) => {\r\n  return `el valor de ${opts.variableName} es igual a ${opts.comparedValue}`\r\n}\r\n\r\ninterface TranslateEveryPluckOpts {\r\n  variableName: string,\r\n  selectedProp: string,\r\n  filter: string\r\n}\r\n\r\ninterface TranslateEqualOpts {\r\n  variableName: string,\r\n  comparedValue: string\r\n}\r\n\r\n// match if string has only a word, include @\r\nconst matchWord = /^[\\S]+$/g;","import { ReadableInstruction } from \"./types\";\r\n\r\nexport const variableHandler = (handlebar: ReadableInstruction): ReadableInstruction => {\r\n  let insideValue = filterValue(handlebar.value)\r\n  const variableName = getTheVariableName(insideValue)\r\n\r\n  \r\n\r\n  handlebar.handlebarType = 'variable'\r\n  return handlebar\r\n}\r\n\r\nconst filterValue = (value: string): string => {\r\n  const regexQuitBraket = /[{}]/g\r\n  let result = value.replace(regexQuitBraket, '').trim()\r\n  return result\r\n}\r\n\r\nconst getTheVariableName = (value: string): string => {\r\n  const regexClasifier = /[A-Za-z\\.@]+/g\r\n  let result = value.match(regexClasifier)\r\n  return result[result.length - 1]\r\n}\t","import { eachHandler } from \"./eachHandler\";\r\nimport { ifHandler } from \"./ifHandler\";\r\nimport { ReadableInstruction } from \"./types\";\r\nimport { variableHandler } from \"./variableHandler\";\r\n\r\nconst ifID = '{{#if'\r\nconst elseID = '{{else'\r\nconst eachID = '{{#each'\r\nconst closeBlock = '{{/'\r\n\r\nexport const handlebarToInstruction = (handlebar: ReadableInstruction): ReadableInstruction => {\r\n  let result: ReadableInstruction = handlebar;\r\n  handlebar.value = handlebar.value.trim()\r\n  if (doesHadlebarMatchID({ txt: handlebar.value, handlebarID: ifID })) {\r\n    result = ifHandler(handlebar)\r\n  } else if (doesHadlebarMatchID({ txt: handlebar.value, handlebarID: elseID })) {\r\n    result.value = \"De lo contrario, mostrar:\"\r\n    result.handlebarType = \"if\"\r\n    result.margin = handlebar.margin\r\n  } else if (doesHadlebarMatchID({ txt: handlebar.value, handlebarID: eachID })) {\r\n    result = eachHandler(handlebar)\r\n  } else if (doesHadlebarMatchID({ txt: handlebar.value, handlebarID: closeBlock })) {\r\n    result.value = ''\r\n  } else {\r\n    result = variableHandler(handlebar)\r\n  }\r\n  return result;\r\n}\r\n\r\nconst doesHadlebarMatchID = (opts: DoesHadlebarMatchIDOpts): boolean => {\r\n  let start = 0\r\n  opts.start ? start = opts.start : null\r\n  const txtSegment = opts.txt.substring(start, opts.handlebarID.length)\r\n  return txtSegment === opts.handlebarID\r\n}\r\n\r\ninterface DoesHadlebarMatchIDOpts {\r\n  txt: string,\r\n  handlebarID: string\r\n  start?: number\r\n}","import { ReadableInstruction } from \"./types\";\r\n\r\nexport const clasificateStringBetweenTextAndHandlebars = (text: string): ReadableInstruction[] => {\r\n  let result: ReadableInstruction[] = [];\r\n  const startHandlebar = '{{';\r\n  const endHandlebar = '}}';\r\n  const marginAmount = 30;\r\n  let margin = 0;\r\n  let stringStorage = ''\r\n  for (let i = 0; i < text.length; i++) {\r\n    const textFragment = text.substring(i, i + startHandlebar.length);\r\n    if (textFragment === startHandlebar) {\r\n      if (stringStorage) {\r\n        result.push({\r\n          type: 'text',\r\n          value: stringStorage,\r\n          margin: margin\r\n        });\r\n      }\r\n      stringStorage = text[i];\r\n      if (text.substring(i + 2, i + 3) === '/') {\r\n        margin -= marginAmount;\r\n      } else if (text.substring(i + 2, i + 3) === '#') {\r\n        margin += marginAmount;\r\n      }\r\n    } else if (textFragment === endHandlebar) {\r\n      stringStorage += text.substring(i, i + endHandlebar.length);\r\n      i = i + endHandlebar.length - 1\r\n      result.push({\r\n        type: 'handlebar',\r\n        value: stringStorage,\r\n        margin: margin\r\n      });\r\n      stringStorage = \"\";\r\n    } else {\r\n      stringStorage += text[i]\r\n    }\r\n  }\r\n  return result\r\n}","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { isVariableAndExist } from \"../../../../../utils/phrasesParsers/types\";\r\n\r\n@Component({\r\n  selector: \"variable-checker[input]\",\r\n  templateUrl: \"./variable-checker.component.html\",\r\n  styleUrls: [\"./variable-checker.component.less\"],\r\n})\r\nexport class VariableCheckerComponent {\r\n  @Input() input: isVariableAndExist;\r\n  @Input() hightlightExistingVariables: boolean = false;\r\n\r\n  @Output() clickExistingVariable: EventEmitter<MouseEvent> = new EventEmitter<\r\n    MouseEvent\r\n  >();\r\n  @Output() clickNonExistingVariable: EventEmitter<\r\n    MouseEvent\r\n  > = new EventEmitter<MouseEvent>();\r\n\r\n  onClickExistingVariable(mouseEvent: MouseEvent) {\r\n    this.clickExistingVariable.emit(mouseEvent);\r\n  }\r\n\r\n  onClickNonExistingVariable(mouseEvent: MouseEvent) {\r\n    this.clickNonExistingVariable.emit(mouseEvent);\r\n  }\r\n}\r\n","<span *ngIf=\"!input.isVariable\">{{input.value}}</span>\r\n<span\r\n  *ngIf=\"input.isVariable && input.exist\"\r\n  (click)=\"onClickExistingVariable($event)\"\r\n  [class]=\"hightlightExistingVariables ? 'variable-checker__isVariableAndExist' : undefined\"\r\n  >{{input.value}}</span\r\n>\r\n<span\r\n  *ngIf=\"input.isVariable && !input.exist\"\r\n  (click)=\"onClickNonExistingVariable($event)\"\r\n  class=\"variable-checker__isVariableAndNotExist\"\r\n  >{{input.value}}</span\r\n>\r\n","import { isVariableAndExist } from \"./types\";\r\n\r\nexport const stringToIsVariableAndExist = (\r\n  text: string,\r\n  data: any\r\n): isVariableAndExist[] => {\r\n  const result: isVariableAndExist[] = [];\r\n  // const isVariableRegex = /([^({\\s]+\\.[^})\\s]+)/g;\r\n  const isVariableRegex = /([^({}\\s]+\\w\\.[^{})\\s]+)/g;\r\n  // separe the matches and non matches into an array of objects:\r\n  text.split(isVariableRegex).forEach((part) => {\r\n    const isThereAMatchWithRegex = part.match(isVariableRegex)?.length;\r\n    let isVariable = false,\r\n      exist = false;\r\n    if (isThereAMatchWithRegex) {\r\n      isVariable = true;\r\n      exist = checkIfPathExists(data, part);\r\n    }\r\n\r\n    result.push({\r\n      value: part,\r\n      isVariable,\r\n      exist,\r\n    });\r\n  });\r\n  return result;\r\n};\r\n\r\n// function that checks if a path exists in an object\r\nfunction checkIfPathExists(obj: any, path: string) {\r\n  return path\r\n    .trim()\r\n    .split(\".\")\r\n    .every(function (key) {\r\n      if (obj) {\r\n        const objProps = obj[\"properties\"];\r\n        if (objProps) {\r\n          obj = objProps;\r\n        }\r\n        obj = obj[key];\r\n      }\r\n      return obj;\r\n    });\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { stringToIsVariableAndExist } from '../../utils/phrasesParsers/stringToIsVariableAndExist';\r\nimport { isVariableAndExist } from '../../utils/phrasesParsers/types';\r\n\r\n@Pipe({\r\n  name: 'variableExist'\r\n})\r\nexport class VariableExistPipe implements PipeTransform {\r\n\r\n  // text was typed as string, but packagr compiler can't understand it\r\n  transform(text: any, object: any): isVariableAndExist[] {\r\n    return stringToIsVariableAndExist(text, object);\r\n  }\r\n\r\n}\r\n","import { Component, Input, AfterViewInit } from \"@angular/core\";\r\nimport { ViewablePhrase } from \"../../../../utils/docxParsers/types\";\r\nimport { handlebarToInstruction } from \"../../../../utils/handlebarTranslators/handlebarToReadableInstruction\";\r\nimport { ReadableInstruction } from \"../../../../utils/handlebarTranslators/types\";\r\nimport { clasificateStringBetweenTextAndHandlebars } from \"../../../../utils/handlebarTranslators/clasificateStringBetweenTextAndHandlebars\";\r\nimport { WorkSpace } from \"../../../../app/interfaces\";\r\n\r\n@Component({\r\n  selector: \"viewable-phrases[viewablePhrases][data][workspace]\",\r\n  templateUrl: \"./viewable-phrase.component.html\",\r\n  styleUrls: [\"./viewable-phrase.component.less\"],\r\n})\r\nexport class ViewablePhraseComponent implements AfterViewInit {\r\n  @Input() viewablePhrases: ViewablePhrase[];\r\n  @Input() data: any;\r\n  @Input() workspace: WorkSpace;\r\n\r\n  public showModal: ShowModal = {\r\n    phraseIndex: 0,\r\n    showModal: false,\r\n    modalPosition: { x: 0, y: 0 },\r\n    arrowPosition: { x: 0 },\r\n    data: undefined,\r\n  };\r\n\r\n  ngAfterViewInit(): void {\r\n    this.createClickoffListener();\r\n  }\r\n\r\n  private createClickoffListener = () => {\r\n    window.addEventListener(\"click\", () => {\r\n      this.showModal.showModal = false;\r\n    });\r\n  };\r\n\r\n  public showModalToggle(e: MouseEvent, phraseIndex: number): void {\r\n    e.stopPropagation();\r\n    this.showModal.phraseIndex = phraseIndex;\r\n    this.showModal.showModal = !this.showModal.showModal;\r\n    this.showModal.modalPosition.x = e.clientX;\r\n    this.showModal.modalPosition.y = e.clientY - window.scrollY;\r\n    this.translateHandlebarToInstructions(phraseIndex);\r\n  }\r\n\r\n  public handlebarsToReadableIntructions(\r\n    clasifiedText: ReadableInstruction[]\r\n  ): ReadableInstruction[] {\r\n    let result: ReadableInstruction[] = [];\r\n    result = clasifiedText.map((clasifiedTextOrHandlebar) => {\r\n      if (clasifiedTextOrHandlebar.type === \"handlebar\") {\r\n        clasifiedTextOrHandlebar = handlebarToInstruction(\r\n          clasifiedTextOrHandlebar\r\n        );\r\n      }\r\n      return clasifiedTextOrHandlebar;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public translateHandlebarToInstructions(viewablePhraseIndex: number): void {\r\n    const handlebar = this.viewablePhrases[viewablePhraseIndex].value as string;\r\n    const clasifiedText = clasificateStringBetweenTextAndHandlebars(handlebar);\r\n    const readableInstructions = this.handlebarsToReadableIntructions(\r\n      clasifiedText\r\n    );\r\n    this.showModal.data = readableInstructions;\r\n  }\r\n\r\n  public setSearchData(e: MouseEvent) {\r\n    // get text from the clicked element\r\n    e.stopImmediatePropagation();\r\n    const element = e.target as HTMLElement;\r\n    this.workspace.searchData = element.innerHTML;\r\n  }\r\n\r\n  public stopClickPropagation(e: MouseEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n  }\r\n}\r\n\r\ninterface ShowModal {\r\n  showModal: boolean;\r\n  phraseIndex: number;\r\n  modalPosition: { x: number; y: number };\r\n  arrowPosition: { x: number };\r\n  data: ReadableInstruction[] | undefined;\r\n}\r\n","<ng-container *ngIf=\"viewablePhrases\"> \r\n  <ng-container *ngFor=\"let viewablePhrase of viewablePhrases; let i = index\">\r\n    <div\r\n      [class.viewable-phrase--typed]=\"viewablePhrase.type !== 'text'\"\r\n      [class.viewable-phrase--if]=\"viewablePhrase.type === 'if'\"\r\n      [class.viewable-phrase--handlebar]=\"viewablePhrase.type === 'handlebar'\"\r\n      [class.viewable-phrase--each]=\"viewablePhrase.type === 'each'\"\r\n      style=\"position: relative;\"\r\n      class=\"viewable-phrase\"\r\n      type=\"text\"\r\n      spellcheck=\"true\"\r\n      (click)=\"viewablePhrase.type !== 'text' ? showModalToggle($event,i) : undefined\"\r\n    >\r\n      <span *ngIf=\"viewablePhrase.type === 'text'\"\r\n        >{{viewablePhrase.value}}</span\r\n      >\r\n      <ng-container *ngIf=\"viewablePhrase.type !== 'text'\">\r\n        <ng-container\r\n          *ngFor=\"let variableChecker of viewablePhrase.value|variableExist:data\"\r\n          comment=\"I have to force the variable viewablePhrase to be string\"\r\n        >\r\n          <variable-checker\r\n            [input]=\"variableChecker\"\r\n            (clickExistingVariable)=\"setSearchData($event)\"\r\n            (clickNonExistingVariable)=\"stopClickPropagation($event)\"\r\n            [hightlightExistingVariables]=\"true\"\r\n            comment=\"check later\"\r\n          ></variable-checker>\r\n        </ng-container>\r\n\r\n        <!-- translated-instruction-modal -->\r\n        <div\r\n          #popup\r\n          class=\"window-modal\"\r\n          *ngIf=\"showModal.showModal && showModal.phraseIndex === i\"\r\n          (click)=\"stopClickPropagation($event)\"\r\n        >\r\n          <div class=\"window-modal__notch\">\r\n            <div class=\"window-modal__notch__triangle\"></div>\r\n          </div>\r\n          <div\r\n            *ngFor=\"let readableInstruction of showModal.data\"\r\n            [style]=\"'margin-left: '+readableInstruction.margin+'px'\"\r\n            class=\"readable-intruction\"\r\n            [class.readable-intruction--if]=\"readableInstruction.handlebarType === 'if'\"\r\n            [class.readable-intruction--each]=\"readableInstruction.handlebarType === 'each'\"\r\n            [class.readable-intruction--variable]=\"readableInstruction.handlebarType === 'variable'\"\r\n          >\r\n            <!-- {{readableInstruction.value}} -->\r\n            <span *ngIf=\"readableInstruction.type === 'text'\"\r\n              >{{readableInstruction.value}}</span\r\n            >\r\n            <ng-container *ngIf=\"readableInstruction.type !== 'text'\">\r\n              <ng-container\r\n                *ngFor=\"let variableChecker of readableInstruction.value|variableExist:data\"\r\n              >\r\n                <!-- this clasificates the variable checker into if, each, or variable. In other words, colors the sentenses. -->\r\n                <variable-checker\r\n                  [input]=\"variableChecker\"\r\n                  (clickExistingVariable)=\"setSearchData($event)\"\r\n                  [hightlightExistingVariables]=\"true\"\r\n                ></variable-checker>\r\n              </ng-container>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { WorkSpace } from \"../../../app/interfaces\";\r\nimport { Zoom } from \"../../../app/shared/zoom-class/Zoom\";\r\nimport {\r\n  EditablePhrase,\r\n  ViewablePhrase,\r\n} from \"../../../utils/docxParsers/types\";\r\n\r\n@Component({\r\n  selector:\r\n    \"app-workspace[objectData][workspace][editablePhrases][fileInput][viewablePhrases]\",\r\n  templateUrl: \"./workspace.component.html\",\r\n  styleUrls: [\r\n    \"./workspace.component.less\",\r\n    \"../../shared/styles/commonStyles.less\",\r\n  ],\r\n})\r\nexport class WorkspaceComponent {\r\n  @Input() objectData: any;\r\n  @Input() workspace: WorkSpace;\r\n  @Input() editablePhrases: EditablePhrase[];\r\n  @Input() fileInput: HTMLButtonElement;\r\n  @Input() viewablePhrases: ViewablePhrase[];\r\n  @Output() editablePhraseChanged: EventEmitter<{\r\n    inputEvent: InputEvent;\r\n    indexOfEditablePhrase: number;\r\n  }> = new EventEmitter();\r\n\r\n  public zoom: Zoom = new Zoom();\r\n\r\n  public onEditablePhraseChanged(e: Event, index: number) {\r\n    const inputEvent = e as InputEvent;\r\n    this.editablePhraseChanged.emit({\r\n      inputEvent,\r\n      indexOfEditablePhrase: index,\r\n    });\r\n  }\r\n\r\n  public disableEnter(e: KeyboardEvent) {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div class=\"workspace\">\r\n  <workspace-data [data]=\"objectData\" [workspace]=\"workspace\"></workspace-data>\r\n  <div\r\n    #templateContainer\r\n    class=\"workspace__template\"\r\n    (wheel)=\"zoom.makeZoom($event, workspace.paperZoom)\"\r\n  >\r\n    <div class=\"workspace__template__import\" *ngIf=\"!editablePhrases.length\">\r\n      <h2 (click)=\"fileInput.click()\" class=\"workspace__template__import__text\">\r\n        Importa un template o un documento de Word\r\n      </h2>\r\n    </div>\r\n    <div\r\n      class=\"workspace__template__paper-container\"\r\n      [ngStyle]=\"{'zoom': workspace.paperZoom.value}\"\r\n      [class.workspace__template__paper-container--double-paper]=\"workspace.mode === 'editView'\"\r\n    >\r\n      <div\r\n        #paper\r\n        *ngIf=\"(workspace.mode === 'edit' || workspace.mode === 'editView') && editablePhrases.length\"\r\n        class=\"workspace__template__paper-container__paper\"\r\n        (keypress)=\"disableEnter($event)\"\r\n      >\r\n        <div *ngIf=\"editablePhrases.length > 0\">\r\n          <editable-phrases\r\n            [editablePhrases]=\"editablePhrases\"\r\n            [workspace]=\"workspace\"\r\n            (editablePhraseChanged)=\"onEditablePhraseChanged($event.inputEvent, $event.index)\"\r\n          ></editable-phrases>\r\n        </div>\r\n      </div>\r\n      <div\r\n        #paper\r\n        *ngIf=\"(workspace.mode === 'view' || workspace.mode === 'editView') && editablePhrases.length\"\r\n        class=\"workspace__template__paper-container__paper\"\r\n        (keypress)=\"disableEnter($event)\"\r\n      >\r\n        <div *ngIf=\"viewablePhrases\">\r\n          <viewable-phrases\r\n            [viewablePhrases]=\"viewablePhrases\"\r\n            [data]=\"objectData\"\r\n            [workspace]=\"workspace\"\r\n          ></viewable-phrases>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { WorkSpace } from '../../../app/interfaces';\r\nimport { Zoom } from '../../../app/shared/zoom-class/Zoom';\r\n\r\n@Component({\r\n  selector: 'app-footer[workspace]',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.less']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  @Input() workspace: WorkSpace\r\n  @Output() clickEditMode: EventEmitter<MouseEvent> = new EventEmitter()\r\n  @Output() clickViewMode: EventEmitter<MouseEvent> = new EventEmitter()\r\n  @Output() clickSimulationMode: EventEmitter<MouseEvent> = new EventEmitter()\r\n\r\n  onClickEditMode(e: MouseEvent) {\r\n    this.clickEditMode.emit(e)\r\n  }\r\n\r\n  onClickViewMode(e: MouseEvent) {\r\n    this.clickViewMode.emit(e)\r\n  }\r\n\r\n  onClickSimulationMode(e: MouseEvent) {\r\n    this.clickSimulationMode.emit(e)\r\n  }\r\n\r\n  public zoom: Zoom = new Zoom()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"status-bar\">\r\n  <div class=\"status-bar__zoom-container\">\r\n    <div class=\"status-bar__zoom-container__element\" (click)=\"zoom.zoomOut(workspace.dataZoom)\">\r\n      -\r\n    </div>\r\n    <div class=\"status-bar__zoom-container__element\" (click)=\"zoom.zoomNormal(workspace.dataZoom)\">\r\n      {{workspace.dataZoom.value * 100 | number}}%\r\n    </div>\r\n    <div class=\"status-bar__zoom-container__element\" (click)=\"zoom.zoomIn(workspace.dataZoom)\">\r\n      +\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"status-bar__mode-container\">\r\n    <div class=\"status-bar__mode-container__item\" style=\"cursor: default;\">\r\n      Modo:\r\n    </div>\r\n    <div\r\n      class=\"status-bar__mode-container__item\"\r\n      [class]=\"workspace.mode==='edit'||workspace.mode==='editView' ? 'status-bar__mode-container__item--selected' : undefined\"\r\n      (click)=\"onClickEditMode($event)\"\r\n    >\r\n      Edición\r\n    </div>\r\n    <div\r\n      class=\"status-bar__mode-container__item\"\r\n      [class]=\"workspace.mode==='view'||workspace.mode==='editView' ? 'status-bar__mode-container__item--selected' : undefined\"\r\n      (click)=\"onClickViewMode($event)\"\r\n    >\r\n      Vista\r\n    </div>\r\n    <div\r\n      class=\"status-bar__mode-container__item\"\r\n      [class]=\"workspace.mode==='simulation' ? 'status-bar__mode-container__item--selected' : undefined\"\r\n      (click)=\"onClickSimulationMode($event)\"\r\n    >\r\n      Simulación\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"status-bar__zoom-container status-bar__zoom-container--right\">\r\n    <div class=\"status-bar__zoom-container__element\" (click)=\"zoom.zoomOut(workspace.paperZoom)\">\r\n      -\r\n    </div>\r\n    <div class=\"status-bar__zoom-container__element\" (click)=\"zoom.zoomNormal(workspace.paperZoom)\">\r\n      {{workspace.paperZoom.value * 100 | number}}%\r\n    </div>\r\n    <div class=\"status-bar__zoom-container__element\" (click)=\"zoom.zoomIn(workspace.paperZoom)\">\r\n      +\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\r\nimport { docxToEditableObjects } from \"../utils/docxParsers/docxToEditableObjects\";\r\nimport {\r\n  EditablePhrase,\r\n  ViewablePhrase,\r\n} from \"../utils/docxParsers/types\";\r\nimport { transformEditablePhrasesToViewablePhrases } from \"../utils/phrasesParsers/transformEditablePhrasesToViewablePhrases\";\r\nimport { DocxFile, ViewMode, WorkSpace, History, SelectionRange } from \"./interfaces\";\r\nimport { Zoom } from \"./shared/zoom-class/Zoom\";\r\n\r\n@Component({\r\n  selector: \"template-editor\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.less\", \"shared/styles/commonStyles.less\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"template-editor\";\r\n  @ViewChild(\"uploadFileInput\") uploadFileInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild(\"templateContainer\") templateContainer: ElementRef<HTMLDivElement>;\r\n  \r\n  @Input() objectData: any;\r\n\r\n  public editablePhrases: EditablePhrase[] = [];\r\n  public viewablePhrases: ViewablePhrase[] = [];\r\n  public history: History[] = [];\r\n  public zoom: Zoom = new Zoom();\r\n\r\n  public workspace: WorkSpace = {\r\n    dropingFile: false,\r\n    fileDropDown: false,\r\n    paperZoom: { value: 1 },\r\n    dataZoom: { value: 1 },\r\n    mode: ViewMode.edit,\r\n    historyIndex: 0,\r\n    lastModifiedEditablePhraseIndex: 0,\r\n    lastSelection: { start: 0, end: 0 },\r\n    needToFocus: false,\r\n  };\r\n\r\n  public docxFile: DocxFile = {\r\n    content: \"\",\r\n    name: \"\",\r\n    lastModifiedDate: 0,\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.fileBackdropHandlerListener();\r\n    this.historyHandlerListener();\r\n    this.changeModeWithHotkeysListener();\r\n  }\r\n\r\n  public setTemplateFromInputEvent(inputEvent: Event) {\r\n    const inputFile = inputEvent.target as HTMLInputElement;\r\n    this.setTemplateFromFile(inputFile.files[0]);\r\n  }\r\n\r\n  private setTemplateFromFile(inputFile: File) {\r\n    const reader = new FileReader();\r\n    reader.onloadend = (e) => {\r\n      const data = e.target.result;\r\n      this.docxFile = {\r\n        // template storage\r\n        ...this.docxFile,\r\n        name: inputFile.name,\r\n        lastModifiedDate: inputFile.lastModified,\r\n        content: data,\r\n      };\r\n      docxToEditableObjects(inputFile).then((editableObjects) => {\r\n        this.setPhrases(editableObjects);\r\n      });\r\n    };\r\n    reader.readAsArrayBuffer(inputFile);\r\n  }\r\n\r\n  private setPhrases(editableObjects: EditablePhrase[]) {\r\n    this.editablePhrases = editableObjects.map((a) => ({ ...a }));\r\n    this.history = [\r\n      {\r\n        editablePhrases: editableObjects.map((a) => ({ ...a })),\r\n        lastModifiedEditablePhraseIndex: 0,\r\n        selection: undefined,\r\n      },\r\n    ];\r\n    this.workspace.historyIndex = 0;\r\n    this.updatesPhrasesValues();\r\n  }\r\n\r\n  public updateEditablePhrase(\r\n    inputEvent: InputEvent,\r\n    editablePhraseIndex: number\r\n  ) {\r\n    const doesHistoryIndexIsPosibleInHistory =\r\n      this.workspace.historyIndex < this.history.length - 1;\r\n    if (doesHistoryIndexIsPosibleInHistory) {\r\n      const historyCuttedAfterCurrentIndex = this.history.slice(\r\n        0,\r\n        this.workspace.historyIndex + 1\r\n      );\r\n      this.history = historyCuttedAfterCurrentIndex;\r\n    }\r\n    const selection = window.getSelection();\r\n    const selectionRange: SelectionRange = {\r\n      start: selection.anchorOffset,\r\n      end: selection.focusOffset,\r\n    };\r\n    const phraseElement = inputEvent.target as HTMLSpanElement;\r\n    const modifiedPhrasesFromHistory = this.history[\r\n      this.history.length - 1\r\n    ].editablePhrases.map((a) => ({ ...a }));\r\n    modifiedPhrasesFromHistory[editablePhraseIndex].value =\r\n      phraseElement.innerText;\r\n    this.history.push({\r\n      editablePhrases: [...modifiedPhrasesFromHistory].map((a) => ({ ...a })),\r\n      lastModifiedEditablePhraseIndex: editablePhraseIndex,\r\n      selection: selectionRange,\r\n    });\r\n    this.workspace = {\r\n      ...this.workspace,\r\n      lastModifiedEditablePhraseIndex: editablePhraseIndex,\r\n      lastSelection: selectionRange,\r\n      historyIndex: this.history.length - 1,\r\n    };\r\n    this.updateViewablePhrasesValue();\r\n  }\r\n\r\n\r\n  public fileBackdropHandlerListener = () => {\r\n    const initCount = -1;\r\n    let count = initCount;\r\n    window.ondragover = (e) => {\r\n      e.preventDefault();\r\n    };\r\n    const docxFileType =\r\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\r\n    window.ondragenter = (e) => {\r\n      // if event contains a file with .docx extension\r\n      if (\r\n        e.dataTransfer.items[0].kind === \"file\" &&\r\n        e.dataTransfer.items[0].type === docxFileType\r\n      ) {\r\n        this.workspace.dropingFile = true;\r\n        count++;\r\n      }\r\n    };\r\n    window.ondragleave = () => {\r\n      count--;\r\n      if (count < 0) {\r\n        this.workspace.dropingFile = false;\r\n        count = initCount;\r\n      }\r\n    };\r\n    window.ondrop = (e: DragEvent) => {\r\n      e.preventDefault();\r\n      count = initCount;\r\n      this.workspace.dropingFile = false;\r\n      if (\r\n        e.dataTransfer.items[0].kind === \"file\" &&\r\n        e.dataTransfer.items[0].type === docxFileType\r\n      ) {\r\n        this.setTemplateFromFile(e.dataTransfer.files[0]);\r\n      }\r\n    };\r\n  };\r\n\r\n  public setMode(mode: string) {\r\n    if (mode === ViewMode.edit) {\r\n      this.workspace.mode = ViewMode.edit;\r\n      this.updatesPhrasesValues();\r\n    } else if (mode === ViewMode.view) {\r\n      this.workspace.mode = ViewMode.view;\r\n      this.updatesPhrasesValues();\r\n    } else if (mode === ViewMode.simulation) {\r\n      this.workspace.mode = ViewMode.simulation;\r\n    } else if (mode === ViewMode.editView) {\r\n      this.workspace.mode = ViewMode.editView;\r\n      if (this.workspace.paperZoom.value >= 1) {\r\n        this.workspace.paperZoom.value = 0.9;\r\n      }\r\n    }\r\n  }\r\n\r\n  private updatesPhrasesValues() {\r\n    this.updateEditablePhrasesValue();\r\n    this.updateViewablePhrasesValue();\r\n  }\r\n\r\n  private updateEditablePhrasesValue() {\r\n    this.workspace.lastModifiedEditablePhraseIndex = this.history[\r\n      this.workspace.historyIndex\r\n    ].lastModifiedEditablePhraseIndex;\r\n    this.editablePhrases = this.history[\r\n      this.workspace.historyIndex\r\n    ].editablePhrases.map((a) => ({\r\n      ...a,\r\n    }));\r\n    this.workspace.needToFocus = true;\r\n    this.workspace.needToFocus = false;\r\n  }\r\n\r\n  private updateViewablePhrasesValue() {\r\n    const updatedViewablePhrases = transformEditablePhrasesToViewablePhrases(\r\n      this.history[this.workspace.historyIndex].editablePhrases\r\n    );\r\n    if (this.viewablePhrases.length === updatedViewablePhrases.length) {\r\n      updatedViewablePhrases.forEach((updatedViewablePhrase, index) => {\r\n        if (this.viewablePhrases[index].value !== updatedViewablePhrase.value) {\r\n          this.viewablePhrases[index].value = updatedViewablePhrase.value;\r\n        }\r\n      });\r\n    } else {\r\n      this.viewablePhrases = transformEditablePhrasesToViewablePhrases(\r\n        this.history[this.workspace.historyIndex].editablePhrases\r\n      );\r\n    }\r\n  }\r\n\r\n  private changeModeWithHotkeysListener() {\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      // detect when shift + v or shift + V and detect when stop pressing\r\n      if ((e.key === \"z\" || e.key === \"Z\") && e.shiftKey && e.altKey) {\r\n        e.preventDefault();\r\n        if (this.workspace.mode !== ViewMode.edit) {\r\n          this.setMode(\"edit\");\r\n        }\r\n      } else if ((e.key === \"x\" || e.key === \"X\") && e.shiftKey && e.altKey) {\r\n        e.preventDefault();\r\n        if (this.workspace.mode !== ViewMode.view) {\r\n          this.setMode(\"view\");\r\n        }\r\n      } else if ((e.key === \"c\" || e.key === \"C\") && e.shiftKey && e.altKey) {\r\n        e.preventDefault();\r\n        if (this.workspace.mode !== ViewMode.simulation) {\r\n          this.setMode(\"simulation\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public undo = () => {\r\n    if (this.workspace.historyIndex > 0) {\r\n      const editablePhrasesFromLastestElementInHistory = this.history[\r\n        this.workspace.historyIndex\r\n      ].editablePhrases.map((a) => ({ ...a }));\r\n      this.workspace.historyIndex--;\r\n      this.workspace = {\r\n        ...this.workspace,\r\n        lastModifiedEditablePhraseIndex: this.history[\r\n          this.workspace.historyIndex\r\n        ].lastModifiedEditablePhraseIndex,\r\n        lastSelection: this.history[this.workspace.historyIndex].selection,\r\n      };\r\n      editablePhrasesFromLastestElementInHistory.map(\r\n        (editablePhrase, index) => {\r\n          const editablePhraseFromHistory = this.history[\r\n            this.workspace.historyIndex\r\n          ].editablePhrases[index];\r\n          if (editablePhrase.value !== editablePhraseFromHistory.value) {\r\n            this.editablePhrases[index] = {\r\n              ...this.history[this.workspace.historyIndex].editablePhrases[\r\n                index\r\n              ],\r\n            };\r\n          }\r\n        }\r\n      );\r\n      this.updateViewablePhrasesValue();\r\n    }\r\n  };\r\n\r\n  public redo = () => {\r\n    if (this.workspace.historyIndex + 1 <= this.history.length - 1) {\r\n      const editablePhrasesFromLastestElementInHistory = this.history[\r\n        this.workspace.historyIndex\r\n      ].editablePhrases.map((a) => ({\r\n        ...a,\r\n      }));\r\n      this.workspace.historyIndex++;\r\n      this.workspace = {\r\n        ...this.workspace,\r\n        lastModifiedEditablePhraseIndex: this.history[\r\n          this.workspace.historyIndex\r\n        ].lastModifiedEditablePhraseIndex,\r\n        lastSelection: this.history[this.workspace.historyIndex].selection,\r\n      };\r\n      editablePhrasesFromLastestElementInHistory.map(\r\n        (editablePhrase, index) => {\r\n          const editablePhraseFromHistory = this.history[\r\n            this.workspace.historyIndex\r\n          ].editablePhrases[index];\r\n          if (editablePhrase.value !== editablePhraseFromHistory.value) {\r\n            this.editablePhrases[index] = { ...editablePhraseFromHistory };\r\n          }\r\n        }\r\n      );\r\n      this.updateViewablePhrasesValue();\r\n    }\r\n  };\r\n\r\n  private historyHandlerListener() {\r\n    // add event listener to ctrl + z and ctrl + y\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      if (e.ctrlKey) {\r\n        if (e.key === \"z\") {\r\n          e.preventDefault();\r\n          this.undo();\r\n        } else if (e.key === \"y\") {\r\n          e.preventDefault();\r\n          this.redo();\r\n        }\r\n      }\r\n    });\r\n  }\r\n}","<!DOCTYPE html>\r\n<html lang=\"es\" style=\"box-sizing: border-box;\">\r\n  <body>\r\n    <input\r\n      #uploadFileInput\r\n      (change)=\"setTemplateFromInputEvent($event)\"\r\n      class=\"invisible\"\r\n      type=\"file\"\r\n      id=\"template\"\r\n      name=\"template\"\r\n      accept=\".docx\"\r\n      />\r\n\r\n    <div\r\n      class=\"backdrop\"\r\n      [class.backdrop--hover]=\"workspace.dropingFile\"\r\n      (wheel)=\"$event.preventDefault()\"\r\n    >\r\n      <div class=\"backdrop__drop-file-msg\">\r\n        Abrir template\r\n      </div>\r\n    </div>\r\n\r\n    <app-header\r\n      [workspace]=\"workspace\"\r\n      [docxFile]=\"docxFile\"\r\n      [history]=\"history\"\r\n      [editablePhrases]=\"editablePhrases\"\r\n      [uploadFileInput]=\"uploadFileInput\"\r\n      (fileChange)=\"setTemplateFromInputEvent($event)\"\r\n    ></app-header>\r\n\r\n    <app-workspace\r\n      [objectData]=\"objectData\"\r\n      [workspace]=\"workspace\"\r\n      [editablePhrases]=\"editablePhrases\"\r\n      [fileInput]=\"uploadFileInput\"\r\n      [viewablePhrases]=\"viewablePhrases\"\r\n      (editablePhraseChanged)=\"updateEditablePhrase($event.inputEvent, $event.indexOfEditablePhrase)\"\r\n    ></app-workspace>\r\n\r\n    <app-footer\r\n      [workspace]=\"workspace\"\r\n      (clickEditMode)=\"!$event.shiftKey ? setMode('edit') : setMode('editView')\"\r\n      (clickViewMode)=\"!$event.shiftKey ? setMode('view') : setMode('editView')\"\r\n      (clickSimulationMode)=\"setMode('simulation')\"\r\n    ></app-footer>\r\n  </body>\r\n</html>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'entersToBr'\r\n})\r\nexport class EntersToBrPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer){}\r\n\r\n  transform(value: string): SafeHtml {\r\n\r\n    // regex \\n or \\r\\n\r\n    const entersRegex = /(\\r\\n|\\n)/gm;\r\n    \r\n    let result = value.replace(entersRegex, (match) => {\r\n      return `<br/>`;\r\n    });\r\n\r\n    return this.sanitizer.bypassSecurityTrustHtml(result);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"isArray\",\r\n})\r\nexport class IsArrayPipe implements PipeTransform {\r\n  transform<T>(value: T | T[]): value is T[] {\r\n    return Array.isArray(value);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[check-variable-existence]\",\r\n})\r\nexport class CheckVariableExistenceDirective implements AfterViewInit {\r\n  constructor(@Inject(ElementRef) private element: ElementRef) {}\r\n  ngAfterViewInit() {\r\n    const element = this.element.nativeElement as HTMLElement;\r\n    element.innerHTML = element.innerHTML.replace(\r\n      /([^({\\s]+\\.[^})\\s]+)/g,\r\n      (variable) => {\r\n        if (variable.indexOf(\".\") === -1) {\r\n          return `<span class=\"variable-not-found\">TESTING${variable}</span>`;\r\n        }\r\n        return variable;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { isObject } from './pipes/isObject.pipe';\r\nimport { TreeNodeComponent } from './components/workspace/data/tree-node/tree-node.component';\r\nimport { HasThesePropsPipe } from './pipes/has-these-props.pipe';\r\nimport { DoesStringRepresentPrimitivePipe } from './pipes/does-string-represent-primitive.pipe';\r\nimport { EntersToBrPipe } from './pipes/enters-to-br.pipe';\r\nimport { ViewablePhraseComponent } from './components/workspace/viewable-phrase/viewable-phrase.component';\r\nimport { IsArrayPipe } from './pipes/is-array.pipe';\r\nimport { FocusDirective } from './directives/focus.directive';\r\nimport { EditablePhraseComponent } from './components/workspace/editable-phrase/editable-phrase.component';\r\nimport { DataComponent } from './components/workspace/data/data.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { WorkspaceComponent } from './components/workspace/workspace.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { SelectionRangeDirective } from './directives/selection-range.directive';\r\nimport { CheckVariableExistenceDirective } from './directives/check-variable-existence.directive';\r\nimport { VariableExistPipe } from './pipes/variable-exist.pipe';\r\nimport { VariableCheckerComponent } from './components/workspace/viewable-phrase/variable-checker/variable-checker.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    isObject,\r\n    TreeNodeComponent,\r\n    HasThesePropsPipe,\r\n    DoesStringRepresentPrimitivePipe,\r\n    EntersToBrPipe,\r\n    ViewablePhraseComponent,\r\n    IsArrayPipe,\r\n    FocusDirective,\r\n    EditablePhraseComponent,\r\n    DataComponent,\r\n    HeaderComponent,\r\n    WorkspaceComponent,\r\n    FooterComponent,\r\n    SelectionRangeDirective,\r\n    CheckVariableExistenceDirective,\r\n    VariableExistPipe,\r\n    VariableCheckerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [],\r\n  exports: [\r\n    AppComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2.FocusDirective","i3.DoesStringRepresentPrimitivePipe","i4.isObject","i5.HasThesePropsPipe","i1.TreeNodeComponent","i2","i2.SelectionRangeDirective","eachID","matchOneVariable","matchTail","filterValue","ifID","i1.VariableCheckerComponent","i3.VariableExistPipe","i1.DataComponent","i2.EditablePhraseComponent","i3.ViewablePhraseComponent","i4","i1.HeaderComponent","i2.WorkspaceComponent","i3.FooterComponent","i1"],"mappings":"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"}